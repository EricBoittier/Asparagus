Search.setIndex({"docnames": ["about", "api", "api/asparagus", "api/asparagus.data", "api/asparagus.interface", "api/asparagus.layer", "api/asparagus.model", "api/asparagus.module", "api/asparagus.sample", "api/asparagus.settings", "api/asparagus.tools", "api/asparagus.train", "api/asparagus.utils", "api/modules", "config_file", "contribute", "example", "index", "installation", "main"], "filenames": ["about.rst", "api.rst", "api/asparagus.rst", "api/asparagus.data.rst", "api/asparagus.interface.rst", "api/asparagus.layer.rst", "api/asparagus.model.rst", "api/asparagus.module.rst", "api/asparagus.sample.rst", "api/asparagus.settings.rst", "api/asparagus.tools.rst", "api/asparagus.train.rst", "api/asparagus.utils.rst", "api/modules.rst", "config_file.rst", "contribute.rst", "example.rst", "index.rst", "installation.rst", "main.rst"], "titles": ["About", "API", "asparagus package", "asparagus.data package", "asparagus.interface package", "asparagus.layer package", "asparagus.model package", "asparagus.module package", "asparagus.sample package", "asparagus.settings package", "asparagus.tools package", "asparagus.train package", "asparagus.utils package", "asparagus", "Configuration File Structure", "Contributing", "Examples", "Asparagus Documentation", "Installation", "Main file"], "terms": {"our": 0, "attempt": 0, "make": [0, 12], "creation": [0, 6, 12, 18], "potenti": [0, 2, 4, 5, 6, 7, 8, 10, 16, 17], "energi": [0, 2, 3, 4, 6, 7, 8, 10, 11, 14, 16, 17], "surfac": [0, 2, 16, 17], "machin": [0, 5, 17], "learn": [0, 5, 11, 14, 17], "easi": 0, "possibl": [0, 3, 4, 8], "ar": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18], "veri": [0, 7, 8], "grow": 0, "thei": 0, "separ": [0, 6], "each": [0, 3, 4, 7, 8, 9, 10, 11], "other": [0, 3, 6, 11, 12, 14], "In": [0, 8, 12, 14], "thi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19], "code": [0, 10, 14, 18], "we": [0, 8, 14, 18], "made": [0, 8], "an": [0, 4, 8, 10, 12, 15], "effort": 0, "put": [0, 8], "togeth": 0, "all": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14], "differ": [0, 6, 8, 10, 16, 19], "part": [0, 10, 14], "process": [0, 7, 10, 11], "creat": [0, 3, 6, 8, 10, 12, 15, 17, 18], "have": [0, 15], "been": 0, "develop": [0, 15, 17], "research": 0, "group": 0, "last": [0, 2, 6, 10, 14], "few": [0, 18], "year": 0, "ly": 0, "It": [0, 8, 10, 11, 14, 19], "becaus": [0, 10, 14], "kai": 0, "doe": [0, 8], "like": [0, 12, 14], "sampl": [0, 2, 13, 16, 17], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 18], "varieti": 0, "method": [0, 3, 4, 7, 8, 14, 16], "see": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12], "page": 0, "more": [0, 8, 14], "inform": [0, 3, 6, 7, 8, 9, 12, 14, 17], "train": [0, 2, 3, 5, 6, 7, 9, 12, 13, 14, 16], "neural": [0, 2, 5], "network": [0, 2, 5, 14], "reproduc": [0, 14], "data": [0, 2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16], "product": [0, 8, 17], "perform": [0, 4, 5, 8, 10, 11, 12, 14], "molecular": [0, 8, 14], "dynam": [0, 8, 10], "simul": [0, 8, 10, 18], "evalu": [0, 11, 14], "tool": [0, 2, 13, 16], "task": [0, 4, 16], "alwai": [0, 8, 10], "look": [0, 10, 14], "wai": [0, 4, 10], "improv": 0, "If": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 18], "you": [0, 14, 15, 17, 18], "ani": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 18], "suggest": 0, "pleas": [0, 4, 14, 15, 17], "let": [0, 14], "u": 0, "know": [0, 10, 14], "open": [0, 3], "issu": [0, 15], "github": [0, 5, 10, 12, 18], "drop": 0, "line": [0, 4], "main": [0, 2, 8, 10, 11, 17], "some": [0, 11, 16], "thing": 0, "current": [0, 6, 8, 9, 10, 11, 12], "work": [0, 4, 8, 14], "ad": [0, 8, 9, 10, 11, 14], "new": [0, 3, 8, 9, 11], "architectur": 0, "schnet": 0, "painn": 0, "mayb": 0, "gener": [0, 8, 9], "behler": [0, 5], "parinello": 0, "uncertainti": 0, "quantif": [0, 11], "ensembl": [0, 4, 8], "deep": 0, "evidenti": 0, "regress": 0, "interfac": [0, 2, 3, 13], "md": [0, 2, 10, 13], "lammp": 0, "amber": 0, "solvat": 0, "model": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13], "ml": [0, 4], "mm": [0, 4], "activ": [0, 2, 7, 13, 17, 18], "cycl": [0, 7], "automat": [0, 2, 14, 18], "transfer": 0, "The": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14], "heart": 14, "asparagu": [1, 14, 16, 18], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19], "save": [6, 8, 9, 10, 11, 12, 14], "detail": [4, 10, 14], "what": 14, "did": 14, "go": [10, 14, 15, 18], "do": [14, 18], "need": [5, 10, 14], "hand": 14, "take": [5, 11, 14], "care": [5, 14], "nevertheless": 14, "how": 14, "config": [2, 3, 6, 7, 8, 10, 11, 12, 13, 14], "json": [2, 3, 4, 6, 7, 8, 9, 11, 12, 14], "usual": [4, 10, 14], "config_fil": [2, 3, 6, 7, 8, 9, 10, 11, 12, 14], "nh3_config_nm": 14, "sample_data_fil": [8, 14], "sampling_nh3_nm": 14, "nms_nh3": 14, "db": [3, 14], "sample_directori": [8, 14], "sample_system": [8, 14], "nh3_c3v": 14, "xyz": [4, 8, 10, 14], "sample_systems_format": [8, 14], "sample_calcul": [8, 14], "xtb": [8, 14, 18], "sample_calculator_arg": [8, 14], "sample_properti": [8, 14], "forc": [3, 4, 6, 7, 8, 10, 14], "dipol": [3, 4, 14], "sample_systems_optim": [8, 14], "true": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "sample_systems_optimize_fmax": [8, 14], "0": [3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 18], "001": [10, 14], "sample_data_overwrit": [8, 14], "fals": [3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "sample_tag": [8, 14], "nmscan": 14, "nms_harmonic_energy_step": [8, 14], "03": 14, "nms_energy_limit": [8, 14], "1": [3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 18], "nms_number_of_coupl": [8, 14], "2": [4, 6, 7, 8, 14, 18], "nms_limit_of_step": [8, 14], "10": [3, 6, 8, 10, 12, 14, 18], "nms_limit_com_shift": [8, 14], "sampler_schedul": 14, "1_nmscan": 14, "sample_systems_idx": 14, "null": 14, "2_nmscan": 14, "sample_count": 14, "data_fil": [2, 3, 14], "model_directori": [6, 11, 12, 14], "model_properti": [6, 11, 14], "atomic_charg": [7, 11, 14], "model_interaction_cutoff": 14, "8": [3, 7, 8, 14, 18], "trainer_properties_weight": [11, 14], "50": 14, "25": 14, "els": [2, 3, 4, 5, 8, 11, 12, 14], "trainer_max_epoch": [11, 14], "1000": [8, 11, 14], "data_sourc": [3, 14], "data_format": 14, "data_alt_property_label": [3, 14], "data_unit_posit": [3, 14], "ang": [3, 12, 14], "data_load_properti": [3, 14], "data_unit_properti": [3, 14], "ev": [3, 8, 12, 14], "eang": 14, "charg": [2, 3, 4, 6, 7, 10, 11, 14], "e": [2, 3, 6, 7, 8, 10, 12, 14, 18], "posit": [3, 4, 5, 6, 7, 8, 10, 12, 14], "data_num_train": [3, 14], "888": 14, "data_num_valid": [3, 14], "111": 14, "data_num_test": [3, 14], "112": 14, "data_train_batch_s": [3, 14], "128": [3, 7, 14], "data_valid_batch_s": [3, 14], "data_test_batch_s": [3, 14], "data_num_work": [3, 14], "data_workdir": 14, "data_overwrit": [3, 14], "data_se": [3, 14], "664521": 14, "model_properties_sc": 14, "09574281780168606": 14, "29": 14, "932318049978853": 14, "5735118188374284": 14, "6977695174545036e": 14, "18": 14, "17839811105704": 14, "10566497769812809": 14, "model_typ": [2, 6, 14], "physnet": [2, 5, 7, 10, 12, 13, 14], "model_unit_properti": [6, 14], "model_cutoff_width": 14, "model_repuls": [6, 14], "model_electrostat": [6, 14], "model_dispers": [6, 14], "model_dispersion_train": [6, 14], "input_typ": [7, 14], "physnetrbf": 14, "input_n_atombasi": [5, 7, 14], "input_n_radialbasi": [5, 7, 14], "64": [7, 10, 14], "input_cutoff_descriptor": 14, "input_cutoff_fn": [7, 14], "poly6": [7, 14], "input_rbf_center_start": [7, 14], "input_rbf_train": [7, 14], "input_n_maxatom": [7, 14], "94": [7, 14], "input_atom_features_rang": [7, 14], "7320508075688772": 14, "graph_typ": [7, 14], "physnetmp": 14, "graph_n_block": [7, 14], "5": [5, 7, 8, 11, 14], "graph_n_residual_interact": [5, 7, 14], "3": [3, 5, 6, 7, 8, 10, 14, 16, 18], "graph_n_residual_atom": 14, "output_typ": [7, 14], "physnetout": 14, "output_n_residu": [7, 14], "output_properti": [7, 14], "trainer_restart": [11, 14], "trainer_properties_train": 14, "trainer_properties_metr": [11, 14], "mse": [11, 14], "trainer_optim": [11, 14], "amsgrad": [11, 14], "trainer_optimizer_arg": [11, 14], "lr": 14, "weight_decai": 14, "1e": [8, 14], "05": [8, 14], "trainer_schedul": [11, 14], "exponentiallr": [11, 14], "trainer_scheduler_arg": [11, 14], "gamma": 14, "999": [11, 14], "trainer_ema": [11, 14], "trainer_ema_decai": [11, 14], "99": 14, "trainer_max_gradient_norm": [11, 14], "trainer_save_interv": [11, 14], "trainer_validation_interv": [11, 14], "trainer_evaluate_testset": [11, 14], "trainer_max_checkpoint": [11, 14], "trainer_store_neighbor_list": [11, 14], "test_dataset": [11, 14], "test_store_neighbor_list": [11, 14], "overwhelm": 14, "": [2, 3, 4, 6, 7, 11, 14], "through": 14, "step": [8, 10, 11, 14], "first": [4, 5, 7, 8, 10, 14, 18], "contain": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14], "follow": [4, 8, 10, 14, 18], "kei": [2, 3, 4, 6, 7, 9, 11, 12, 14], "name": [4, 5, 6, 8, 9, 10, 11, 12, 14, 18], "where": [4, 8, 9, 10, 11, 12, 14, 18], "load": [2, 3, 4, 6, 10, 11, 12, 14], "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17], "databas": [2, 8, 11, 13, 14], "directori": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14], "A": [7, 8, 11, 12, 14], "list": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "format": [2, 3, 4, 8, 9, 11, 14], "calcul": [2, 4, 8, 10, 11, 12, 13, 14], "can": [4, 8, 11, 12, 14, 16, 18], "ab": [7, 14], "initio": [7, 14], "argument": [3, 4, 6, 7, 8, 9, 11, 12, 14], "pass": [5, 6, 7, 8, 10, 14], "dictionari": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14], "keyword": [2, 3, 4, 6, 7, 8, 9, 11, 12, 14], "might": [8, 14], "electron": [7, 14], "properti": [2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14], "string": [3, 4, 6, 8, 9, 11, 12, 14], "should": [5, 6, 8, 12, 14, 15], "optim": [2, 6, 7, 8, 12, 13, 14], "befor": [11, 14], "maximum": [6, 8, 11, 12, 14], "allow": [12, 14, 17], "dure": [6, 7, 14], "overwritten": 14, "tag": [4, 8, 11, 14], "next": [8, 14], "specif": [3, 6, 8, 12, 14], "exampl": [8, 14, 17], "nm": [2, 13, 14], "For": [8, 9, 14], "about": [8, 9, 14], "option": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "refer": [2, 3, 4, 6, 8, 10, 11, 12, 14], "document": 14, "note": [5, 10, 12, 14, 18], "By": [5, 8, 11, 14], "default": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14], "want": 14, "anoth": 14, "specifi": [10, 14], "setup": [3, 4, 14, 18], "unit": [3, 4, 6, 7, 8, 11, 12, 14], "same": [3, 4, 9, 10, 12, 14], "ASE": [2, 3, 4, 6, 8, 10, 12, 14, 18], "number": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14], "split": [3, 14], "valid": [3, 11, 12, 14], "test": [2, 3, 11, 14, 16], "set": [2, 3, 4, 6, 7, 8, 11, 12, 13, 14], "80": [3, 14], "batch": [3, 4, 6, 7, 10, 11, 14], "size": [3, 4, 10, 11, 14], "worker": [3, 14], "larg": 14, "increas": [8, 14], "folder": [6, 12, 14, 18], "seed": [3, 14], "random": [3, 7, 8, 10, 14], "import": [11, 14, 18], "splite": 14, "scale": [3, 6, 7, 8, 11, 14], "normal": [8, 14], "mean": [11, 14], "standard": [3, 7, 14], "deviat": [3, 7, 14], "type": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14], "moment": [14, 18], "onli": [7, 8, 9, 10, 11, 14], "support": [4, 12, 14], "width": [4, 5, 8, 14], "cutoff": [2, 3, 4, 6, 7, 12, 13, 14], "function": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14], "descriptor": [5, 14], "repuls": [6, 14], "term": [6, 7, 14], "electrostat": [2, 4, 6, 13, 14], "correct": [7, 9, 11, 14], "dispers": [2, 6, 13, 14], "d3": [6, 7, 14], "trainabl": [5, 6, 7, 11, 14], "otherwis": [2, 8, 12, 14], "paramet": [3, 5, 7, 8, 12, 14], "fix": [4, 6, 7, 14], "input": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14], "layer": [2, 6, 7, 13, 14], "transform": [5, 7, 12, 14], "rbf": [5, 7, 14], "featur": [5, 7, 14], "vector": [5, 6, 7, 10, 14], "radial": [2, 7, 13, 14], "basi": [5, 7, 14], "short": [7, 14], "distanc": [4, 5, 6, 7, 8, 14], "start": [2, 4, 6, 7, 10, 14], "point": [3, 4, 7, 10, 14], "atom": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 18], "rang": [3, 5, 6, 7, 8, 14], "graph": [2, 12, 13, 14], "messag": [7, 10, 14], "block": [5, 14], "residu": [5, 7, 11, 14], "interact": [3, 4, 5, 6, 7, 14], "output": [2, 3, 4, 5, 10, 13, 14], "predict": [4, 6, 7, 10, 11, 14], "restart": [4, 6, 11, 14], "checkpoint": [2, 6, 8, 10, 11, 12, 14], "empti": [3, 8, 11, 14], "metric": [11, 14], "here": [14, 15, 16, 17], "rate": [9, 11, 14], "weight": [2, 5, 6, 11, 14], "decai": [6, 11, 14], "schedul": [2, 6, 12, 13, 14], "exponenti": [5, 11, 14], "move": [11, 14], "averag": [3, 4, 7, 10, 11, 14], "gradient": [4, 10, 11, 12, 14], "norm": [11, 14], "clip": [11, 14], "interv": [4, 8, 11, 14], "which": [3, 4, 6, 8, 9, 10, 11, 12, 14], "neighbor": [2, 3, 4, 10, 11, 12, 14], "store": [3, 4, 6, 8, 9, 11, 14], "guid": 15, "repositori": [15, 18], "nh": 16, "sub": 16, "basic": [4, 6, 9, 10, 16], "capac": 16, "shown": 16, "ammonia": 16, "among": 16, "them": [3, 5, 8, 9, 16], "formaldehyd": 16, "zundel": 16, "qm9": 16, "chemic": [7, 16], "space": 16, "sn2": 16, "reactiv": 16, "analysi": [8, 16], "project": 17, "python": [12, 17, 18], "packag": [1, 13, 17, 18], "structur": [7, 8, 17], "contribut": [4, 7, 11, 17], "check": [2, 3, 4, 5, 6, 8, 9, 11, 12, 17], "out": [4, 17], "section": 17, "further": [6, 9, 17], "add": [3, 8, 17], "under": 17, "g": [2, 3, 6, 7, 8, 10, 12, 17], "recommend": [8, 18], "virtual": 18, "mamba": 18, "Or": 18, "case": [5, 6, 8, 11, 12, 18], "miniconda": 18, "onc": [10, 18], "enviro": 18, "call": [5, 12, 18, 19], "To": 18, "command": [2, 4, 18], "just": [3, 11, 18], "replac": [3, 4, 18], "conda": 18, "geq": 18, "12": [6, 11, 18], "NOT": 18, "9": 18, "pytorch": [12, 18], "torch": [2, 3, 4, 5, 6, 7, 11, 12, 18], "ema": 18, "tensorboard": [6, 11, 12, 18], "4": [5, 8, 10, 18], "21": 18, "clone": 18, "git": 18, "http": [5, 10, 12, 18], "com": [5, 10, 12, 18], "livazquez": 18, "Then": 18, "via": 18, "pip": 18, "altern": [3, 6, 11, 12, 18], "py": [4, 5, 12, 18], "bewar": 18, "With": 18, "modif": 18, "done": [3, 10, 11, 12, 18], "reflect": 18, "modul": [13, 18, 19], "routin": [10, 19], "program": 19, "count": [2, 3], "delet": [2, 3, 6, 8, 11, 12], "get": [2, 3, 4, 5, 8, 9, 12, 13], "get_metadata": [2, 3], "init_system": [2, 3], "metadata": [2, 3], "reserv": [2, 3], "reset": [2, 3, 11], "set_metadata": [2, 3], "updat": [2, 3, 4, 7, 9, 11, 12], "write": [2, 3, 4, 8, 10, 11], "connect": [2, 3], "database_hdf5": [2, 13], "get_last_id": [2, 3], "database_npz": [2, 13], "database_sqlite3": [2, 13], "datacontain": [2, 11, 13], "check_data_properti": [2, 3], "check_data_sourc": [2, 3], "dataset_load": [2, 3], "dataset_setup": [2, 3], "get_datalabel": [2, 3], "get_dataload": [2, 3], "get_dataset": [2, 3], "get_from_metadata": [2, 3], "get_info": [2, 3, 6, 7, 8], "get_property_sc": [2, 3], "get_test": [2, 3], "get_train": [2, 3, 13], "get_valid": [2, 3], "dataload": [2, 13], "data_collate_fn": [2, 3], "init_neighbor_list": [2, 3], "store_neighbor_list": [2, 3], "dataread": [2, 13], "load_as": [2, 3], "load_atom": [2, 3], "load_db": [2, 3], "load_npz": [2, 3], "load_traj": [2, 3], "dataset": [2, 8, 11, 13], "add_atom": [2, 3], "check_data_compat": [2, 3], "get_properti": [2, 3, 8], "load_data": [2, 3], "reset_databas": [2, 3], "set_properti": [2, 3], "update_properti": [2, 3], "datasubset": [2, 3], "ase_model": [2, 13], "get_ase_calcul": [2, 4, 13], "get_ase_properti": [2, 4], "model_as": [2, 13], "ase_calcul": [2, 4], "default_paramet": [2, 4], "initialize_model_input": [2, 4], "initialize_model_input_list": [2, 4], "resolve_atom": [2, 4], "set_atom": [2, 4], "set_atoms_charg": [2, 4], "update_model_input": [2, 4], "update_model_input_list": [2, 4], "model_pycharmm": [2, 13], "pycharmm_calcul": [2, 4], "calculate_charmm": [2, 4], "orca_as": [2, 13], "orca_dipol": [2, 4], "emb": [2, 4], "implemented_properti": [2, 4, 10], "read": [2, 3, 4, 8, 9, 10, 12], "read_dipol": [2, 4], "read_energi": [2, 4], "read_forc": [2, 4], "read_result": [2, 4], "write_input": [2, 4], "pointchargepotenti": [2, 4], "calculator_tag": [2, 4], "get_forc": [2, 4], "set_charg": [2, 4], "set_posit": [2, 4], "write_mmcharg": [2, 4], "shell_as": [2, 13], "shellcalcul": [2, 4], "discard_results_on_any_chang": [2, 4], "load_results_json": [2, 4], "load_results_npz": [2, 4], "set_input_fil": [2, 4], "set_result_fil": [2, 4], "set_shel": [2, 4], "set_system_properti": [2, 4], "write_shell_input": [2, 4], "tagreplac": [2, 4], "get_charg": [2, 4], "get_directori": [2, 4], "get_multipl": [2, 4], "get_spin_times_2": [2, 4], "get_xyz": [2, 4], "slurm_as": [2, 13], "slurmcalcul": [2, 4], "get_activation_fn": [2, 5], "base": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], "denselay": [2, 5], "forward": [2, 5, 6, 7, 10], "in_featur": [2, 5], "out_featur": [2, 5], "reset_paramet": [2, 5], "residuallay": [2, 5], "cosinecutoff": [2, 5], "cosinecutoff_width": [2, 5], "poly6cutoff": [2, 5], "poly6cutoff_width": [2, 5], "get_cutoff_fn": [2, 5], "physnet_lay": [2, 13], "interactionblock": [2, 5], "interactionlay": [2, 5], "outputblock": [2, 5], "gaussianrbf": [2, 5, 7], "gaussianrbf_physnet": [2, 5], "softplus_invers": [2, 5, 12], "get_radial_fn": [2, 5], "get_model_calcul": [2, 6, 13], "filemanag": [2, 13], "check_max_checkpoint": [2, 6, 12], "create_model_directori": [2, 6, 12], "load_checkpoint": [2, 6, 12], "save_checkpoint": [2, 6, 12], "save_config": [2, 6, 12], "model_physnet": [2, 6], "get_trainable_paramet": [2, 6], "set_property_sc": [2, 6, 7], "set_unit_properti": [2, 6, 7], "d3_dispers": [2, 7], "pc_shielded_electrostat": [2, 7], "get_graph_painn": [2, 7], "get_graph_physnet": [2, 7], "get_graph_modul": [2, 7], "get_input_painn": [2, 7], "get_input_physnet": [2, 7], "get_input_physnet_origin": [2, 7], "get_input_modul": [2, 7], "get_output_painn": [2, 7], "get_output_physnet": [2, 7], "get_output_modul": [2, 7], "physnet_modul": [2, 13], "graph_physnet": [2, 7], "input_physnet": [2, 7], "output_physnet": [2, 7], "set_atomic_energies_shift": [2, 7], "mc": [2, 13], "mcsampler": [2, 8], "monte_carlo_step": [2, 8], "run_system": [2, 8], "mdsampler": [2, 8], "run_langevin_md": [2, 8], "meta": [2, 13], "metasampl": [2, 8], "run_meta": [2, 8], "normalmodesampl": [2, 8], "r": [2, 3, 5, 8, 12], "get_sample_posit": [2, 8], "run_sampl": [2, 8], "normalmodescann": [2, 8], "run_scan": [2, 8], "sampler": [2, 13], "assign_calcul": [2, 8], "check_properti": [2, 8, 11], "keep_go": [2, 8], "read_system": [2, 8], "run": [2, 4, 5, 8, 10, 11], "run_optim": [2, 8], "save_properti": [2, 8], "write_trajectori": [2, 8, 10], "configur": [2, 9, 10, 12], "conversion_dict": [2, 9], "convert": [2, 9, 12], "convert_dtyp": [2, 9], "dump": [2, 9], "get_dictionari": [2, 9], "get_file_path": [2, 9], "is_convert": [2, 9], "item": [2, 3, 4, 7, 9, 12], "get_config": [2, 9], "dtype": [2, 4, 5, 6, 7, 12, 13], "globl": [2, 13], "set_global_config_fil": [2, 9], "set_global_devic": [2, 9], "set_global_directori": [2, 9], "set_global_dtyp": [2, 9], "set_global_mod": [2, 9], "set_global_r": [2, 9], "dmc": [2, 13], "branch": [2, 10], "create_batch": [2, 10], "gbranch": [2, 10], "get_batch_energi": [2, 10], "init_dmc": [2, 10], "look_up_t": [2, 10], "walk": [2, 10], "logger_dmc": [2, 10], "close_fil": [2, 10], "log_begin": [2, 10], "log_end": [2, 10], "write_error": [2, 10], "write_last": [2, 10], "write_log": [2, 10], "write_pot": [2, 10], "mdp": [2, 13], "run_mdp": [2, 10], "mep": [2, 13], "get_mep": [2, 10], "spectroscopi": [2, 13], "get_harmonic_freq": [2, 10], "get_optim": [2, 11], "get_schedul": [2, 11], "tester": [2, 13], "check_test_properti": [2, 11], "compute_metr": [2, 11], "is_import": [2, 11], "plain_data": [2, 11], "plot_correl": [2, 11], "plot_histogram": [2, 11], "plot_residu": [2, 11], "print_metr": [2, 11], "reset_metr": [2, 11], "save_csv": [2, 11], "save_npz": [2, 11], "update_metr": [2, 11], "trainer": [2, 13], "check_model_unit": [2, 11], "check_properties_metrics_weight": [2, 11], "predict_batch": [2, 11], "util": [2, 13], "check_config": [2, 13], "check_input_dtyp": [2, 12], "check_property_label": [2, 12], "get_default_arg": [2, 12], "get_dtype_arg": [2, 12], "get_function_loc": [2, 12], "get_input_arg": [2, 12], "merge_dictionari": [2, 12], "merge_dictionary_list": [2, 12], "check_dtyp": [2, 9, 13], "in_cuda": [2, 12], "is_non": [2, 12], "is_none_arrai": [2, 12], "is_array_lik": [2, 12], "is_ase_atom": [2, 12], "is_ase_atoms_arrai": [2, 12], "is_attach": [2, 12], "is_bool": [2, 12], "is_bool_arrai": [2, 12], "is_boolean_arrai": [2, 12], "is_cal": [2, 12], "is_dictionari": [2, 12], "is_grad_en": [2, 12], "is_integ": [2, 12], "is_integer_arrai": [2, 12], "is_numer": [2, 12], "is_numeric_arrai": [2, 12], "is_object": [2, 12], "is_str": [2, 12], "is_string_arrai": [2, 12], "check_unit": [2, 13], "convert_unit_as": [2, 12], "detach_tensor": [2, 12], "flatten_array_lik": [2, 12], "gather_nd": [2, 12], "header": [2, 10, 12], "printprogressbar": [2, 12], "segment_sum": [2, 12], "unsorted_segment_sum": [2, 12], "legaci": [2, 13], "convert_from_tensorflow": [2, 12], "get_tf_config": [2, 12], "get_torch_config": [2, 12], "neighborlist": [2, 13], "aseneighborlist": [2, 12], "torchneighborlist": [2, 12], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "str": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "dict": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "object": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "kwarg": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "either": [2, 3, 4, 6, 7, 8, 9, 11, 12], "path": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "file": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "addit": [2, 3, 4, 6, 7, 8, 11, 12], "arg": [2, 3, 4, 9, 12], "return": [2, 3, 4, 5, 6, 7, 8, 12], "model_checkpoint": [2, 6, 10], "int": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12], "best": [2, 6, 11, 12], "ase": [2, 3, 4, 8, 10], "atoms_charg": [2, 4, 10], "float": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12], "use_neighbor_list": [2, 10], "bool": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "label": [2, 3, 4, 6, 9, 10, 11, 12], "self": [2, 4, 6, 8, 12], "latest": 2, "defin": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12], "index": [2, 3, 4, 5, 6, 7, 8, 10, 12], "respect": [2, 3, 4, 6, 8, 10, 11, 12], "assign": [2, 4, 8, 11, 12], "total": [2, 4, 6, 8, 10, 11, 12], "system": [2, 3, 4, 6, 7, 8, 10, 11], "comput": [2, 3, 4, 5, 7, 8, 11, 12], "provid": [2, 3, 4, 8, 11, 12], "avail": [2, 3, 4, 8, 11, 12], "instanc": [2, 3, 5, 9, 11], "rtype": [2, 4, 11], "get_data_contain": [2, 13], "data_file_format": [2, 3], "initi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "model_calcul": [2, 4, 6, 10, 11], "nn": [2, 5, 6, 7, 11], "_default_calculator_model": [2, 6], "set_data_contain": [2, 13], "data_contain": [2, 11], "eventu": [2, 8, 9, 11], "variabl": [2, 5, 7, 8, 9, 12], "set_model_calcul": [2, 13], "quick": 2, "author": 2, "k": [2, 8], "toepfer": 2, "l": 2, "vazquez": 2, "salazar": 2, "bundl": 2, "construct": [2, 5, 7], "select": [3, 4, 7, 8, 11], "row": 3, "row_id": 3, "entri": [3, 6, 9], "singl": [3, 4, 11], "multipl": [3, 4, 10], "column": 3, "accord": [3, 8, 11], "alreadi": [3, 4, 5, 6, 9, 11, 12], "present": 3, "certain": 3, "overwrit": [3, 6, 8, 9, 12], "exist": [3, 6, 8, 9, 12], "integ": [3, 4, 6, 8, 12], "id": 3, "mode": [3, 8, 9, 12], "lock_fil": 3, "w": 3, "append": [3, 8], "lock": 3, "prefix": [3, 4, 8, 11, 12], "hdf5": 3, "numpi": 3, "npz": [3, 11], "indic": [3, 4, 6, 7, 8, 12], "data_source_format": 3, "manag": [3, 6, 12], "distribut": [3, 5, 7, 8], "one": [3, 4, 5, 6, 8, 12], "sql": 3, "extens": [3, 10, 12], "_alt_property_label": 3, "non": 3, "bohr": [3, 7, 12], "cell": [3, 4], "correspond": [3, 4, 5, 11], "absolut": [3, 11], "rel": 3, "loader": 3, "np": [3, 8], "randint": 3, "1e6": 3, "idx": [3, 10], "callabl": [3, 4, 5, 7, 8, 9, 11, 12], "top": [3, 12], "prioriti": [3, 12], "property_atom_sc": 3, "atomic_energi": [3, 11], "statist": 3, "up": [3, 10, 11], "date": 3, "recomput": 3, "flag": [3, 6, 8, 10, 11], "manipul": 3, "per": [3, 6, 8], "data_batch_s": 3, "data_shuffl": 3, "shuffl": 3, "compil": 3, "after": 3, "epoch": [3, 6, 11, 12], "parallel": [3, 8], "collect": [3, 8], "prepar": [3, 4, 6, 11, 12], "data_pin_memori": 3, "gpu": [3, 10, 12], "tensor": [3, 4, 5, 6, 7, 11, 12], "pair": [3, 4, 5, 6, 7, 9], "collat": 3, "atoms_numb": [3, 6], "natom": [3, 4, 10], "atomic_numb": [3, 6, 7], "idx_i": [3, 5, 6, 7], "npair": 3, "idx_j": [3, 5, 6, 7], "pbc_offset": [3, 6, 7], "sys_i": [3, 6], "sys_ij": 3, "inf": 3, "func_neighbor_list": 3, "infin": 3, "equal": [3, 4, 10], "max": [3, 4], "pre": [3, 4, 11], "result": [3, 5, 6, 7, 8, 10, 11, 12], "alt_property_label": [3, 12], "adapt": [3, 10, 12], "subset": 3, "conform": [3, 8], "belong": 3, "source_unit_properti": 3, "As": [3, 10], "unit_properti": [3, 7, 11], "four": 3, "compat": [3, 4, 9, 12], "between": [3, 4, 6, 7, 8, 9, 11], "subset_idx": 3, "iter": [3, 8, 9, 10, 12], "over": [3, 8, 9], "calculator_arg": 4, "ithread": [4, 8], "directli": [4, 8], "thread": [4, 8], "avoid": [4, 7, 8], "conflict": [4, 8, 9, 12], "written": [4, 8], "calc_properti": 4, "period": [4, 6, 7], "boundari": [4, 6, 7], "condit": [4, 7, 8], "given": [4, 5, 8, 9, 10, 11], "form": [4, 12], "valu": [4, 5, 6, 8, 9, 11, 12], "attach": [4, 12], "use_ase_neighbor_list": 4, "within": [4, 5, 8], "regard": 4, "consid": [4, 8, 11], "anywai": 4, "system_chang": 4, "all_chang": 4, "again": 4, "assum": [4, 6], "implement": [4, 7, 8, 10, 12], "atoms_list": 4, "all_result": 4, "atoms_batch": 4, "prop": 4, "resolv": 4, "consist": [4, 7], "shape": [4, 10, 12], "reshap": 4, "bach": 4, "chang": [4, 6], "ml_atom_indic": 4, "ml_atomic_numb": 4, "ml_charg": 4, "ml_fluctuating_charg": 4, "mlmm_atomic_charg": 4, "mlmm_rcut": 4, "mlmm_width": 4, "float64": [4, 5, 7], "pycharmm": 4, "treat": 4, "charmm": [4, 5], "partial": 4, "psf": 4, "ignor": [4, 5, 6, 8], "zero": [4, 5, 6, 10], "ntran": 4, "natim": 4, "idxp": 4, "x": [4, 5, 11, 12], "y": [4, 11], "z": 4, "dx": 4, "dy": 4, "dz": 4, "nmlp": 4, "nmlmmp": 4, "idxi": 4, "idxj": 4, "idxjp": 4, "idxu": 4, "idxv": 4, "idxup": 4, "idxvp": 4, "match": [4, 8, 11, 12], "signatur": 4, "mlpot": 4, "primari": [4, 6], "imag": [4, 6, 8, 10], "pointer": [4, 6], "coordin": [4, 8, 10], "deriv": [4, 5], "embed": 4, "plu": 4, "fileiocalcul": 4, "orca": 4, "inp": 4, "mult": 4, "orcablock": 4, "scf": 4, "maxit": 4, "200": 4, "end": [4, 5, 12], "orcasimpleinput": 4, "tightscf": 4, "pbe": 4, "def2": 4, "svp": 4, "mmcharg": 4, "calc": 4, "pcgrad": 4, "filenam": [4, 10], "modifi": [4, 5, 7, 12], "execut": 4, "templat": 4, "shell": 4, "copi": 4, "files_replac": 4, "its": [4, 11], "instruct": [4, 8], "appli": [4, 5, 6, 8, 11], "func": 4, "itself": [4, 9], "order": [4, 5, 7], "element": [4, 7, 12], "symbol": [4, 10, 12], "cartesian": [4, 10], "dir": 4, "execute_fil": 4, "result_properti": 4, "expect": [4, 12], "result_fil": 4, "result_file_path": 4, "when": [4, 8], "spin": 4, "bash": 4, "Not": 4, "mai": 4, "instead": [4, 5, 11], "purepath": 4, "result_file_format": 4, "while": [4, 5], "previous": 4, "n": [4, 12], "unpair": 4, "slurm": 4, "submiss": 4, "scan_interv": 4, "scan": [4, 8], "complet": [4, 12], "submit": 4, "job": [4, 10], "sbatch": 4, "extern": 4, "than": [5, 6, 8, 11, 12], "n_input": 5, "n_output": 5, "activation_fn": 5, "bia": 5, "weight_init": 5, "xavier_normal_": 5, "bias_init": 5, "zeros_": 5, "devic": [5, 6, 7, 9, 12], "cpu": [5, 7, 10, 12], "linear": 5, "dens": 5, "wrapper": 5, "ident": 5, "shift": [5, 6, 7, 8], "neuron": 5, "init": 5, "xavier": 5, "alloc": [5, 7], "everi": [5, 11], "overridden": 5, "subclass": 5, "although": 5, "recip": 5, "afterward": 5, "sinc": 5, "former": 5, "regist": 5, "hook": 5, "latter": 5, "silent": 5, "weight_1_init": 5, "orthogonal_": 5, "weight_2_init": 5, "orthogon": 5, "second": [5, 7], "style": 5, "cosin": 5, "atomist": [5, 7], "schnetpack": 5, "blob": [5, 12], "master": [5, 12], "src": 5, "f": [5, 8, 12], "egin": 5, "im": 5, "left": 5, "co": 5, "rac": 5, "pi": 5, "r_": [5, 8], "ext": 5, "ight": 5, "geqslant": 5, "2nd": 5, "smooth": 5, "polynomi": 5, "6th": 5, "6x": 5, "15x": 5, "10x": 5, "n_atombasi": [5, 7], "n_radialbasi": [5, 7], "n_residual_interact": 5, "n_residual_featur": 5, "length": [5, 7, 8, 12], "center": [5, 7, 8], "n_atom": [5, 6, 7], "n_pair": [5, 6, 7], "j": [5, 6, 7, 10], "n_result": 5, "n_residu": 5, "rbf_n_basi": 5, "rbf_center_start": 5, "rbf_center_end": 5, "rbf_trainabl": 5, "gaussian": [5, 8, 10], "lower": [5, 6, 7, 8, 12], "upper": [5, 6, 7, 8], "d": [5, 7, 12], "origin": [5, 10], "doubl": 5, "express": 5, "static": [5, 11], "well": [5, 11], "loss": [6, 11], "highest": [6, 7, 12], "model_max_checkpoint": 6, "writer": [6, 11, 12], "tensorboardx": [6, 12], "log": [6, 8, 10, 12], "summarywrit": [6, 12], "max_checkpoint": [6, 12], "exceed": [6, 12], "threshold": [6, 8, 11, 12], "ones": [6, 11, 12], "lowest": [6, 7, 12], "taken": [6, 8, 12], "attribut": [6, 12], "checkpoint_label": 6, "state": [6, 10, 11, 12], "num_checkpoint": [6, 12], "reach": [6, 12], "mani": [6, 12], "max_backup": [6, 12], "backup": [6, 12], "old": [6, 12], "100": [6, 8, 12], "model_cutoff": 6, "model_cuton": 6, "model_switch_rang": 6, "adopt": [6, 11], "switch": [6, 7], "off": [6, 7], "close": [6, 7, 10], "grimm": [6, 7], "empir": 6, "n_system": 6, "molecul": [6, 8, 10], "extra": 6, "offset": [6, 7], "pbc_atom": 6, "superclust": 6, "approach": 6, "pbc_idx": 6, "pbc_idx_j": 6, "repsect": 6, "no_weight_decai": 6, "affect": 6, "special": 6, "treatment": 6, "scaling_paramet": [6, 7], "atomic_energies_shift": [6, 7], "factor": [6, 7, 11, 12], "cuton": 7, "d3_s6": 7, "d3_s8": 7, "d3_a1": 7, "d3_a2": 7, "beck": 7, "johnson": 7, "damp": 7, "stefan": 7, "et": 7, "al": 7, "accur": 7, "parametr": [7, 11], "densiti": 7, "dft": 7, "h": 7, "pu": 7, "journal": [7, 10], "physic": [7, 10], "132": 7, "15": 7, "2010": 7, "154104": 7, "convers": [7, 9, 11, 12], "0000": 7, "9171": 7, "3385": 7, "8830": 7, "hartre": 7, "cutoff_short_rang": 7, "switch_fn": 7, "shield": 7, "singular": 7, "represent": 7, "encod": 7, "graph_n_residual_featur": 7, "graph_activation_fn": 7, "shifted_softplu": 7, "features_list": 7, "n_block": 7, "input_radial_fn": 7, "input_radial_cutoff": 7, "input_rbf_center_end": 7, "input_radialbasis_fn": 7, "plutonium": 7, "librari": 7, "sqrt": [7, 8, 10], "uniform": 7, "output_activation_fn": 7, "output_scaling_paramet": 7, "relat": 7, "core": 7, "mc_temperatur": 8, "mc_step": 8, "mc_max_displac": 8, "mc_save_interv": 8, "simpl": 8, "mont": [8, 10], "carlo": [8, 10], "metropoli": 8, "algorithm": 8, "300": [8, 11], "temperatur": [8, 10], "kelvin": 8, "frame": 8, "displac": [8, 10], "angstrom": 8, "monta": 8, "nstep": [8, 10], "max_displac": 8, "trajectory_fil": 8, "futur": 8, "could": 8, "sophist": 8, "mala": 8, "hmc": 8, "trajectori": [8, 10], "request": [8, 11, 12], "sample_systems_queu": 8, "queue": 8, "tupl": 8, "includ": 8, "md_temperatur": 8, "md_time_step": 8, "md_simulation_tim": 8, "md_save_interv": 8, "md_langevin_frict": 8, "md_equilibration_tim": 8, "md_initial_veloc": 8, "md_initial_temperatur": 8, "target": [8, 12], "control": 8, "langevin": [8, 10], "thermostat": 8, "time": [8, 10], "1e5": 8, "p": 8, "01": 8, "friction": [8, 10], "coeffici": [8, 10], "magnitud": 8, "fast": 8, "heat": 8, "cool": 8, "slow": 8, "equilibr": [8, 10], "prior": 8, "veloc": [8, 10], "maxwel": 8, "boltzmann": 8, "time_step": [8, 10], "simulation_tim": 8, "langevin_frict": 8, "equilibration_tim": 8, "initial_veloc": 8, "initial_temperatur": 8, "log_fil": 8, "verloc": 8, "verlet": [8, 10], "nvt": 8, "meta_cv": 8, "meta_gaussian_height": 8, "meta_gaussian_width": 8, "meta_gaussian_interv": 8, "meta_hookean": 8, "meta_hookean_force_const": 8, "meta_temperatur": 8, "meta_time_step": 8, "meta_simulation_tim": 8, "meta_save_interv": 8, "meta_langevin_frict": 8, "meta_initial_veloc": 8, "meta_initial_temperatur": 8, "meta_parallel": 8, "sublist": 8, "cv": 8, "reaction": 8, "bond": 8, "angl": 8, "dihedr": 8, "height": 8, "fwhm": 8, "hookean": 8, "constraint": [8, 10], "limit": 8, "two": [8, 10, 12], "ever": 8, "constant": [8, 10], "much": 8, "higher": 8, "classic": 8, "due": 8, "gaussian_height": 8, "gaussian_width": 8, "gaussian_interv": 8, "gaussian_log_fil": 8, "hookean_force_const": 8, "nsampl": 8, "coars": 8, "nms_temperatur": 8, "nms_nsampl": 8, "nms_save_displac": 8, "version": 8, "chem": [8, 10], "sci": 8, "2017": 8, "3192": 8, "3203": 8, "nmode": 8, "fcnt": 8, "temp": 8, "bernoulli": 8, "math": [8, 12], "pm": 8, "dfrac": 8, "3c_": 8, "n_": 8, "k_": 8, "b": [8, 12], "t": [8, 12], "ndarrai": 8, "arrai": [8, 10, 12], "obtain": 8, "initial_posit": 8, "vib_mod": 8, "vib_mass": 8, "vib_fcnt": 8, "vib_temp": 8, "nomral": 8, "vibrat": 8, "reduc": 8, "mass": [8, 10], "sample_calculate_queu": 8, "combin": [8, 11, 12], "equilibrium": [8, 10], "nms_indic": 8, "nms_clean": 8, "sample_num_thread": 8, "full": [8, 11], "ot": 8, "fixatom": 8, "remov": 8, "vib_": 8, "isampl": 8, "harmon": [8, 10], "approxim": 8, "numer": [8, 12], "give": 8, "global": [8, 9], "minimum": [8, 10], "coupl": 8, "direct": [8, 9, 10], "identifi": 8, "translat": 8, "rotat": 8, "larger": 8, "system_initial_potenti": 8, "system_displfact": 8, "system_mod": 8, "atom_indic": 8, "nms_exclude_mod": 8, "nms_frequency_rang": 8, "sort": 8, "wave": 8, "exclud": 8, "procedur": [8, 9], "frequenc": [8, 10], "sample_data_file_format": 8, "sample_systems_indic": 8, "sample_save_trajectori": 8, "temporari": 8, "parent": 8, "sample_system_queu": 8, "definit": [8, 9, 11], "also": 8, "serial": 8, "nmsampler": 8, "nmscanner": 8, "error": [8, 10, 11], "unavail": 8, "shall": 8, "compar": [8, 12], "dummi": 8, "continu": 8, "sample_index": 8, "sample_optimzed_queu": 8, "ase_optim": 8, "cotain": 8, "without": [8, 10], "so": 8, "far": 8, "scanner": 8, "metadynam": 8, "config_from": 9, "locat": [9, 12], "come": [9, 12], "check_default": 9, "oper": 9, "intern": 9, "covert": 9, "argitem": 9, "argsskip": 9, "skip": 9, "argskipt": 9, "config_new": 9, "verbos": [9, 11, 12], "addition": [9, 12], "handl": 9, "nwalker": 10, "stepsiz": 10, "eqstep": 10, "alpha": 10, "max_batch": 10, "6000": 10, "initial_coord": 10, "total_charg": 10, "diffus": 10, "mmuniba": 10, "dmc_gpu_physnet": 10, "tree": 10, "framework": 10, "pess": 10, "american": 10, "633": 10, "1996": 10, "doi": 10, "org": [10, 12], "1119": 10, "18168": 10, "scholarblog": 10, "emori": 10, "edu": 10, "bowman": 10, "fortran": 10, "90": 10, "walker": 10, "imaginari": 10, "feed": 10, "back": 10, "propot": 10, "dct": 10, "pot": 10, "defect": 10, "geometri": 10, "refx": 10, "symb": 10, "vmin": 10, "psip": 10, "psips_f": 10, "v_ref": 10, "v_tot": 10, "birth": 10, "death": 10, "aliv": 10, "coor": 10, "batch_siz": 10, "max_siz": 10, "naliv": 10, "criteria": 10, "ground": 10, "natm": 10, "progress": [10, 11, 12], "depend": 10, "v0": 10, "tabl": 10, "die": 10, "difuss": 10, "montecarlo": 10, "replica": 10, "deltatau": 10, "rho": 10, "distr": 10, "subroutin": 10, "footer": 10, "logfil": 10, "errq": 10, "v": 10, "v_ave": 10, "02": 10, "ep": 10, "0005": 10, "number_of_step": 10, "4000": 10, "traj": 10, "output_fil": 10, "phy": 10, "150": 10, "074107": 10, "2019": 10, "transit": 10, "opt": 10, "backward": 10, "momentum": 10, "__init__": 10, "transtion": 10, "most": 10, "favor": 10, "pe": 10, "therefor": 10, "necessari": 10, "hessian": 10, "txt": 10, "initial_geometri": 10, "tolerance_opt": 10, "tolerance_freq": 10, "model_paramet": 11, "nnp": 11, "test_properti": 11, "must": [11, 12], "situ": 11, "data_properti": 11, "mae": 11, "squar": 11, "data_nd": 11, "label_dataset": 11, "label_properti": 11, "data_predict": 11, "data_refer": 11, "data_metr": 11, "test_scal": 11, "test_directori": 11, "test_plot_format": 11, "test_plot_dpi": 11, "plot": 11, "correl": 11, "axi": 11, "figsiz": 11, "6": [11, 12], "fontsiz": 11, "dpi": 11, "test_binnum": 11, "101": 11, "test_histlog": 11, "spread": 11, "histogram": 11, "test_label": 11, "print": 11, "rmse": 11, "val": 11, "csv_name": 11, "csv": 11, "npz_name": 11, "binari": 11, "test_plot_correl": 11, "test_plot_histogram": 11, "test_plot_residu": 11, "pdf": 11, "test_save_csv": 11, "test_csv_fil": 11, "model_predict": 11, "test_save_npz": 11, "test_npz_fil": 11, "test_scale_per_atom": 11, "graphic": 11, "show": 11, "figur": 11, "matplotlib": 11, "pyplot": 11, "savefig": 11, "_": 11, "particular": 11, "metrics_upd": 11, "trainer_properti": 11, "trainer_summary_writ": 11, "trainer_print_progress_bar": 11, "10000": 11, "qualiti": 11, "both": [11, 12], "individu": 11, "wise": 11, "scheme": 11, "oldest": 11, "summari": 11, "bar": [11, 12], "stout": 11, "model_unit": 11, "data_unit": 11, "related_properti": 11, "default_property_metr": 11, "default_property_weight": 11, "scare": 11, "loss_fn": 11, "loss_onli": 11, "l1loss": 11, "debug": [11, 12], "dafault": 11, "enabl": [11, 12], "autograd": 11, "anomali": 11, "detect": 11, "dtypes_arg": 12, "raise_error": 12, "return_info": 12, "ument": 12, "property_label": 12, "valid_property_label": 12, "return_modifi": 12, "found": 12, "alt_properti": 12, "_valid_properti": 12, "spell": 12, "wa": 12, "self_class": 12, "self_modul": 12, "bottom": 12, "module_nam": 12, "inspect": 12, "stack": 12, "previou": 12, "kbyanc": 12, "blogspot": 12, "2007": 12, "07": 12, "aggreg": 12, "html": 12, "dict_old": 12, "dict_new": 12, "keep": 12, "merg": 12, "dicta": 12, "dictb": 12, "re\u00fceat": 12, "kept": 12, "cuda": 12, "inhomogen": 12, "redirect": 12, "boolean": 12, "target_unit": 12, "source_unit": 12, "describ": 12, "kcal": 12, "proportion": 12, "unit_label": 12, "recognit": 12, "detach": 12, "param": 12, "2d": 12, "c": 12, "repres": 12, "discuss": 12, "tf": 12, "gather": 12, "nd": 12, "37502": 12, "suffix": 12, "decim": 12, "fill": 12, "printend": 12, "loop": 12, "termin": 12, "requir": 12, "percent": 12, "charact": 12, "segment_id": 12, "gist": 12, "bbrighttaer": 12, "207dc03b178bbd0fef8d1c0c1390d4b": 12, "analog": 12, "www": 12, "tensorflow": 12, "api_doc": 12, "segment": 12, "summat": 12, "stabl": 12, "invers": 12, "softplu": 12, "exp": 12, "num_seg": 12, "sum": 12, "along": 12, "whose": 12, "v1": 12, "model_dtyp": 12, "yet": 12, "fulli": 12, "convert_tf_to_torch": 12, "config_data": 12, "environ": 12, "torchani": 12, "pbc": 12, "aiqm": 12, "aev": 12, "writ": 12, "subpackag": 13, "submodul": 13, "content": 13}, "objects": {"": [[2, 0, 0, "-", "asparagus"]], "asparagus": [[2, 0, 0, "-", "asparagus"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "interface"], [5, 0, 0, "-", "layer"], [6, 0, 0, "-", "model"], [7, 0, 0, "-", "module"], [8, 0, 0, "-", "sample"], [9, 0, 0, "-", "settings"], [10, 0, 0, "-", "tools"], [11, 0, 0, "-", "train"], [12, 0, 0, "-", "utils"]], "asparagus.asparagus": [[2, 1, 1, "", "Asparagus"]], "asparagus.asparagus.Asparagus": [[2, 2, 1, "", "get"], [2, 2, 1, "", "get_ase_calculator"], [2, 2, 1, "", "get_data_container"], [2, 2, 1, "", "get_model_calculator"], [2, 2, 1, "", "get_trainer"], [2, 2, 1, "", "set_data_container"], [2, 2, 1, "", "set_model_calculator"], [2, 2, 1, "", "train"]], "asparagus.data": [[3, 0, 0, "-", "database"], [3, 0, 0, "-", "database_hdf5"], [3, 0, 0, "-", "database_npz"], [3, 0, 0, "-", "database_sqlite3"], [3, 0, 0, "-", "datacontainer"], [3, 0, 0, "-", "dataloader"], [3, 0, 0, "-", "datareader"], [3, 0, 0, "-", "dataset"]], "asparagus.data.database": [[3, 1, 1, "", "DataBase"], [3, 4, 1, "", "connect"], [3, 4, 1, "", "get_metadata"]], "asparagus.data.database.DataBase": [[3, 2, 1, "", "count"], [3, 2, 1, "", "delete"], [3, 2, 1, "", "get"], [3, 2, 1, "", "get_metadata"], [3, 2, 1, "", "init_systems"], [3, 3, 1, "", "metadata"], [3, 2, 1, "", "reserve"], [3, 2, 1, "", "reset"], [3, 2, 1, "", "set_metadata"], [3, 2, 1, "", "update"], [3, 2, 1, "", "write"]], "asparagus.data.database_hdf5": [[3, 1, 1, "", "DataBase_hdf5"]], "asparagus.data.database_hdf5.DataBase_hdf5": [[3, 2, 1, "", "get_last_id"], [3, 3, 1, "", "metadata"], [3, 2, 1, "", "update"]], "asparagus.data.database_npz": [[3, 1, 1, "", "DataBase_npz"]], "asparagus.data.database_npz.DataBase_npz": [[3, 2, 1, "", "delete"], [3, 2, 1, "", "get_last_id"], [3, 3, 1, "", "metadata"], [3, 2, 1, "", "update"]], "asparagus.data.datacontainer": [[3, 1, 1, "", "DataContainer"]], "asparagus.data.datacontainer.DataContainer": [[3, 2, 1, "", "check_data_properties"], [3, 2, 1, "", "check_data_source"], [3, 2, 1, "", "dataset_load"], [3, 2, 1, "", "dataset_setup"], [3, 2, 1, "", "get"], [3, 2, 1, "", "get_datalabels"], [3, 2, 1, "", "get_dataloader"], [3, 2, 1, "", "get_dataset"], [3, 2, 1, "", "get_from_metadata"], [3, 2, 1, "", "get_info"], [3, 2, 1, "", "get_metadata"], [3, 2, 1, "", "get_property_scaling"], [3, 2, 1, "", "get_test"], [3, 2, 1, "", "get_train"], [3, 2, 1, "", "get_valid"]], "asparagus.data.dataloader": [[3, 1, 1, "", "DataLoader"]], "asparagus.data.dataloader.DataLoader": [[3, 2, 1, "", "data_collate_fn"], [3, 2, 1, "", "init_neighbor_list"], [3, 2, 1, "", "store_neighbor_list"]], "asparagus.data.datareader": [[3, 1, 1, "", "DataReader"]], "asparagus.data.datareader.DataReader": [[3, 2, 1, "", "load"], [3, 2, 1, "", "load_ase"], [3, 2, 1, "", "load_atoms"], [3, 2, 1, "", "load_db"], [3, 2, 1, "", "load_npz"], [3, 2, 1, "", "load_traj"]], "asparagus.data.dataset": [[3, 1, 1, "", "DataSet"], [3, 1, 1, "", "DataSubSet"]], "asparagus.data.dataset.DataSet": [[3, 2, 1, "", "add_atoms"], [3, 2, 1, "", "check_data_compatibility"], [3, 2, 1, "", "get"], [3, 2, 1, "", "get_metadata"], [3, 2, 1, "", "get_properties"], [3, 2, 1, "", "load_data"], [3, 3, 1, "", "metadata"], [3, 2, 1, "", "reset_database"], [3, 2, 1, "", "set_metadata"], [3, 2, 1, "", "set_properties"], [3, 2, 1, "", "update_properties"]], "asparagus.data.dataset.DataSubSet": [[3, 2, 1, "", "get"], [3, 2, 1, "", "get_properties"], [3, 2, 1, "", "set_properties"], [3, 2, 1, "", "update_properties"]], "asparagus.interface": [[4, 0, 0, "-", "ase_model"], [4, 0, 0, "-", "model_ase"], [4, 0, 0, "-", "model_pycharmm"], [4, 0, 0, "-", "orca_ase"], [4, 0, 0, "-", "shell_ase"], [4, 0, 0, "-", "slurm_ase"]], "asparagus.interface.ase_model": [[4, 4, 1, "", "get_ase_calculator"], [4, 4, 1, "", "get_ase_properties"]], "asparagus.interface.model_ase": [[4, 1, 1, "", "ASE_Calculator"]], "asparagus.interface.model_ase.ASE_Calculator": [[4, 2, 1, "", "calculate"], [4, 5, 1, "", "default_parameters"], [4, 2, 1, "", "initialize_model_input"], [4, 2, 1, "", "initialize_model_input_list"], [4, 2, 1, "", "resolve_atoms"], [4, 2, 1, "", "set_atoms"], [4, 2, 1, "", "set_atoms_charge"], [4, 2, 1, "", "update_model_input"], [4, 2, 1, "", "update_model_input_list"]], "asparagus.interface.model_pycharmm": [[4, 1, 1, "", "PyCharmm_Calculator"]], "asparagus.interface.model_pycharmm.PyCharmm_Calculator": [[4, 2, 1, "", "calculate_charmm"]], "asparagus.interface.orca_ase": [[4, 1, 1, "", "ORCA_Dipole"], [4, 1, 1, "", "PointChargePotential"]], "asparagus.interface.orca_ase.ORCA_Dipole": [[4, 5, 1, "", "command"], [4, 5, 1, "", "default_parameters"], [4, 2, 1, "", "embed"], [4, 5, 1, "", "implemented_properties"], [4, 2, 1, "", "read"], [4, 2, 1, "", "read_dipole"], [4, 2, 1, "", "read_energy"], [4, 2, 1, "", "read_forces"], [4, 2, 1, "", "read_results"], [4, 2, 1, "", "set"], [4, 2, 1, "", "write_input"]], "asparagus.interface.orca_ase.PointChargePotential": [[4, 3, 1, "", "calculator_tag"], [4, 2, 1, "", "get_forces"], [4, 2, 1, "", "set_charges"], [4, 2, 1, "", "set_positions"], [4, 2, 1, "", "write_mmcharges"]], "asparagus.interface.shell_ase": [[4, 1, 1, "", "ShellCalculator"], [4, 1, 1, "", "TagReplacement"]], "asparagus.interface.shell_ase.ShellCalculator": [[4, 2, 1, "", "calculate"], [4, 5, 1, "", "default_parameters"], [4, 5, 1, "", "discard_results_on_any_change"], [4, 2, 1, "", "load_results_json"], [4, 2, 1, "", "load_results_npz"], [4, 2, 1, "", "read_results"], [4, 2, 1, "", "set_input_files"], [4, 2, 1, "", "set_result_files"], [4, 2, 1, "", "set_shell"], [4, 2, 1, "", "set_system_properties"], [4, 2, 1, "", "write_input"], [4, 2, 1, "", "write_shell_input"]], "asparagus.interface.shell_ase.TagReplacement": [[4, 2, 1, "", "get_charge"], [4, 2, 1, "", "get_directory"], [4, 2, 1, "", "get_multiplicity"], [4, 2, 1, "", "get_spin_times_2"], [4, 2, 1, "", "get_xyz"]], "asparagus.interface.slurm_ase": [[4, 1, 1, "", "SlurmCalculator"]], "asparagus.interface.slurm_ase.SlurmCalculator": [[4, 2, 1, "", "calculate"], [4, 5, 1, "", "command"], [4, 5, 1, "", "default_parameters"], [4, 5, 1, "", "discard_results_on_any_change"], [4, 2, 1, "", "load_results_json"], [4, 2, 1, "", "load_results_npz"], [4, 2, 1, "", "read_results"]], "asparagus.layer": [[5, 0, 0, "-", "activation"], [5, 0, 0, "-", "base"], [5, 0, 0, "-", "cutoff"], [5, 0, 0, "-", "physnet_layers"], [5, 0, 0, "-", "radial"]], "asparagus.layer.activation": [[5, 4, 1, "", "get_activation_fn"]], "asparagus.layer.base": [[5, 1, 1, "", "DenseLayer"], [5, 1, 1, "", "ResidualLayer"]], "asparagus.layer.base.DenseLayer": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "in_features"], [5, 5, 1, "", "out_features"], [5, 2, 1, "", "reset_parameters"], [5, 5, 1, "", "weight"]], "asparagus.layer.base.ResidualLayer": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.cutoff": [[5, 1, 1, "", "CosineCutoff"], [5, 1, 1, "", "CosineCutoff_Width"], [5, 1, 1, "", "Poly6Cutoff"], [5, 1, 1, "", "Poly6Cutoff_Width"], [5, 4, 1, "", "get_cutoff_fn"]], "asparagus.layer.cutoff.CosineCutoff": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.cutoff.CosineCutoff_Width": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.cutoff.Poly6Cutoff": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.cutoff.Poly6Cutoff_Width": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.physnet_layers": [[5, 1, 1, "", "InteractionBlock"], [5, 1, 1, "", "InteractionLayer"], [5, 1, 1, "", "OutputBlock"]], "asparagus.layer.physnet_layers.InteractionBlock": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.physnet_layers.InteractionLayer": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.physnet_layers.OutputBlock": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.radial": [[5, 1, 1, "", "GaussianRBF"], [5, 1, 1, "", "GaussianRBF_PhysNet"], [5, 4, 1, "", "get_radial_fn"]], "asparagus.layer.radial.GaussianRBF": [[5, 2, 1, "", "forward"], [5, 5, 1, "", "training"]], "asparagus.layer.radial.GaussianRBF_PhysNet": [[5, 2, 1, "", "forward"], [5, 2, 1, "", "softplus_inverse"], [5, 5, 1, "", "training"]], "asparagus.model": [[6, 0, 0, "-", "calculator"], [6, 0, 0, "-", "filemanager"], [6, 0, 0, "-", "physnet"]], "asparagus.model.calculator": [[6, 4, 1, "", "get_model_calculator"]], "asparagus.model.filemanager": [[6, 1, 1, "", "FileManager"]], "asparagus.model.filemanager.FileManager": [[6, 2, 1, "", "check_max_checkpoints"], [6, 2, 1, "", "create_model_directory"], [6, 2, 1, "", "load_checkpoint"], [6, 2, 1, "", "save_checkpoint"], [6, 2, 1, "", "save_config"]], "asparagus.model.physnet": [[6, 1, 1, "", "Model_PhysNet"]], "asparagus.model.physnet.Model_PhysNet": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "get_info"], [6, 2, 1, "", "get_trainable_parameters"], [6, 2, 1, "", "set_property_scaling"], [6, 2, 1, "", "set_unit_properties"], [6, 5, 1, "", "training"]], "asparagus.module": [[7, 0, 0, "-", "dispersion"], [7, 0, 0, "-", "electrostatics"], [7, 0, 0, "-", "graph"], [7, 0, 0, "-", "input"], [7, 0, 0, "-", "output"], [7, 0, 0, "-", "physnet_modules"]], "asparagus.module.dispersion": [[7, 1, 1, "", "D3_dispersion"]], "asparagus.module.dispersion.D3_dispersion": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_info"], [7, 2, 1, "", "set_unit_properties"], [7, 5, 1, "", "training"]], "asparagus.module.electrostatics": [[7, 1, 1, "", "PC_shielded_electrostatics"]], "asparagus.module.electrostatics.PC_shielded_electrostatics": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_info"], [7, 2, 1, "", "set_unit_properties"], [7, 5, 1, "", "training"]], "asparagus.module.graph": [[7, 4, 1, "", "get_Graph_PaiNN"], [7, 4, 1, "", "get_Graph_PhysNet"], [7, 4, 1, "", "get_graph_module"]], "asparagus.module.input": [[7, 4, 1, "", "get_Input_PaiNN"], [7, 4, 1, "", "get_Input_PhysNet"], [7, 4, 1, "", "get_Input_PhysNet_original"], [7, 4, 1, "", "get_input_module"]], "asparagus.module.output": [[7, 4, 1, "", "get_Output_PaiNN"], [7, 4, 1, "", "get_Output_PhysNet"], [7, 4, 1, "", "get_output_module"]], "asparagus.module.physnet_modules": [[7, 1, 1, "", "Graph_PhysNet"], [7, 1, 1, "", "Input_PhysNet"], [7, 1, 1, "", "Output_PhysNet"]], "asparagus.module.physnet_modules.Graph_PhysNet": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_info"], [7, 5, 1, "", "training"]], "asparagus.module.physnet_modules.Input_PhysNet": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_info"], [7, 5, 1, "", "training"]], "asparagus.module.physnet_modules.Output_PhysNet": [[7, 2, 1, "", "forward"], [7, 2, 1, "", "get_info"], [7, 2, 1, "", "set_atomic_energies_shift"], [7, 2, 1, "", "set_property_scaling"], [7, 5, 1, "", "training"]], "asparagus.sample": [[8, 0, 0, "-", "mc"], [8, 0, 0, "-", "md"], [8, 0, 0, "-", "meta"], [8, 0, 0, "-", "nms"], [8, 0, 0, "-", "sampler"]], "asparagus.sample.mc": [[8, 1, 1, "", "MCSampler"]], "asparagus.sample.mc.MCSampler": [[8, 2, 1, "", "get_info"], [8, 2, 1, "", "monte_carlo_steps"], [8, 2, 1, "", "run_system"], [8, 2, 1, "", "run_systems"]], "asparagus.sample.md": [[8, 1, 1, "", "MDSampler"]], "asparagus.sample.md.MDSampler": [[8, 2, 1, "", "get_info"], [8, 2, 1, "", "run_langevin_md"], [8, 2, 1, "", "run_system"], [8, 2, 1, "", "run_systems"]], "asparagus.sample.meta": [[8, 1, 1, "", "MetaSampler"]], "asparagus.sample.meta.MetaSampler": [[8, 2, 1, "", "get_info"], [8, 2, 1, "", "run_meta"], [8, 2, 1, "", "run_system"], [8, 2, 1, "", "run_systems"]], "asparagus.sample.nms": [[8, 1, 1, "", "NormalModeSampler"], [8, 1, 1, "", "NormalModeScanner"]], "asparagus.sample.nms.NormalModeSampler": [[8, 2, 1, "", "R"], [8, 2, 1, "", "get_info"], [8, 2, 1, "", "get_sample_positions"], [8, 2, 1, "", "run_sampling"], [8, 2, 1, "", "run_system"], [8, 2, 1, "", "run_systems"]], "asparagus.sample.nms.NormalModeScanner": [[8, 2, 1, "", "get_info"], [8, 2, 1, "", "run_scan"], [8, 2, 1, "", "run_system"], [8, 2, 1, "", "run_systems"]], "asparagus.sample.sampler": [[8, 1, 1, "", "Sampler"]], "asparagus.sample.sampler.Sampler": [[8, 2, 1, "", "assign_calculator"], [8, 2, 1, "", "check_properties"], [8, 2, 1, "", "get_info"], [8, 2, 1, "", "get_properties"], [8, 2, 1, "", "keep_going"], [8, 2, 1, "", "read_systems"], [8, 2, 1, "", "run"], [8, 2, 1, "", "run_optimization"], [8, 2, 1, "", "run_system"], [8, 2, 1, "", "run_systems"], [8, 2, 1, "", "save_properties"], [8, 2, 1, "", "write_trajectory"]], "asparagus.settings": [[9, 0, 0, "-", "config"], [9, 0, 0, "-", "default"], [9, 0, 0, "-", "dtypes"], [9, 0, 0, "-", "globl"], [9, 0, 0, "-", "properties"]], "asparagus.settings.config": [[9, 1, 1, "", "Configuration"], [9, 4, 1, "", "get_config"]], "asparagus.settings.config.Configuration": [[9, 2, 1, "", "check"], [9, 2, 1, "", "conversion_dict"], [9, 2, 1, "", "convert"], [9, 2, 1, "", "convert_dtype"], [9, 2, 1, "", "dump"], [9, 2, 1, "", "get"], [9, 2, 1, "", "get_dictionary"], [9, 2, 1, "", "get_file_path"], [9, 2, 1, "", "is_convertible"], [9, 2, 1, "", "items"], [9, 2, 1, "", "keys"], [9, 2, 1, "", "read"], [9, 2, 1, "", "set"], [9, 2, 1, "", "update"]], "asparagus.settings.globl": [[9, 4, 1, "", "set_global_config_file"], [9, 4, 1, "", "set_global_device"], [9, 4, 1, "", "set_global_directory"], [9, 4, 1, "", "set_global_dtype"], [9, 4, 1, "", "set_global_mode"], [9, 4, 1, "", "set_global_rate"]], "asparagus.tools": [[10, 0, 0, "-", "DMC"], [10, 0, 0, "-", "MDP"], [10, 0, 0, "-", "MEP"], [10, 0, 0, "-", "spectroscopy"]], "asparagus.tools.DMC": [[10, 1, 1, "", "DMC"], [10, 1, 1, "", "Logger_DMC"]], "asparagus.tools.DMC.DMC": [[10, 2, 1, "", "branch"], [10, 2, 1, "", "create_batch"], [10, 2, 1, "", "gbranch"], [10, 2, 1, "", "get_batch_energy"], [10, 2, 1, "", "init_dmc"], [10, 2, 1, "", "look_up_table"], [10, 2, 1, "", "run"], [10, 2, 1, "", "walk"]], "asparagus.tools.DMC.Logger_DMC": [[10, 2, 1, "", "close_files"], [10, 2, 1, "", "log_begin"], [10, 2, 1, "", "log_end"], [10, 2, 1, "", "write_error"], [10, 2, 1, "", "write_last"], [10, 2, 1, "", "write_log"], [10, 2, 1, "", "write_pot"]], "asparagus.tools.MDP": [[10, 1, 1, "", "MDP"]], "asparagus.tools.MDP.MDP": [[10, 2, 1, "", "run_mdp"], [10, 2, 1, "", "write_trajectory"]], "asparagus.tools.MEP": [[10, 1, 1, "", "MEP"]], "asparagus.tools.MEP.MEP": [[10, 2, 1, "", "get_MEP"], [10, 2, 1, "", "write_trajectory"]], "asparagus.tools.spectroscopy": [[10, 4, 1, "", "get_harmonic_freqs"]], "asparagus.train": [[11, 0, 0, "-", "optimizer"], [11, 0, 0, "-", "scheduler"], [11, 0, 0, "-", "tester"], [11, 0, 0, "-", "trainer"]], "asparagus.train.optimizer": [[11, 4, 1, "", "get_optimizer"]], "asparagus.train.scheduler": [[11, 4, 1, "", "get_scheduler"]], "asparagus.train.tester": [[11, 1, 1, "", "Tester"]], "asparagus.train.tester.Tester": [[11, 2, 1, "", "check_test_properties"], [11, 2, 1, "", "compute_metrics"], [11, 2, 1, "", "is_imported"], [11, 2, 1, "", "plain_data"], [11, 2, 1, "", "plot_correlation"], [11, 2, 1, "", "plot_histogram"], [11, 2, 1, "", "plot_residual"], [11, 2, 1, "", "print_metric"], [11, 2, 1, "", "reset_metrics"], [11, 2, 1, "", "save_csv"], [11, 2, 1, "", "save_npz"], [11, 2, 1, "", "test"], [11, 2, 1, "", "update_metrics"]], "asparagus.train.trainer": [[11, 1, 1, "", "Trainer"]], "asparagus.train.trainer.Trainer": [[11, 2, 1, "", "check_model_units"], [11, 2, 1, "", "check_properties"], [11, 2, 1, "", "check_properties_metrics_weights"], [11, 2, 1, "", "compute_metrics"], [11, 2, 1, "", "predict_batch"], [11, 2, 1, "", "reset_metrics"], [11, 2, 1, "", "run"], [11, 2, 1, "", "update_metrics"]], "asparagus.utils": [[12, 0, 0, "-", "check_config"], [12, 0, 0, "-", "check_dtype"], [12, 0, 0, "-", "check_units"], [12, 0, 0, "-", "data"], [12, 0, 0, "-", "filemanager"], [12, 0, 0, "-", "functions"], [12, 0, 0, "-", "legacy"], [12, 0, 0, "-", "neighborlist"]], "asparagus.utils.check_config": [[12, 4, 1, "", "check_input_dtype"], [12, 4, 1, "", "check_property_label"], [12, 4, 1, "", "get_default_args"], [12, 4, 1, "", "get_dtype_args"], [12, 4, 1, "", "get_function_location"], [12, 4, 1, "", "get_input_args"], [12, 4, 1, "", "merge_dictionaries"], [12, 4, 1, "", "merge_dictionary_lists"]], "asparagus.utils.check_dtype": [[12, 4, 1, "", "in_cuda"], [12, 4, 1, "", "is_None"], [12, 4, 1, "", "is_None_array"], [12, 4, 1, "", "is_array_like"], [12, 4, 1, "", "is_ase_atoms"], [12, 4, 1, "", "is_ase_atoms_array"], [12, 4, 1, "", "is_attached"], [12, 4, 1, "", "is_bool"], [12, 4, 1, "", "is_bool_array"], [12, 4, 1, "", "is_boolean_array"], [12, 4, 1, "", "is_callable"], [12, 4, 1, "", "is_dictionary"], [12, 4, 1, "", "is_grad_enabled"], [12, 4, 1, "", "is_integer"], [12, 4, 1, "", "is_integer_array"], [12, 4, 1, "", "is_numeric"], [12, 4, 1, "", "is_numeric_array"], [12, 4, 1, "", "is_object"], [12, 4, 1, "", "is_string"], [12, 4, 1, "", "is_string_array"]], "asparagus.utils.check_units": [[12, 4, 1, "", "check_units"], [12, 4, 1, "", "convert_unit_ase"]], "asparagus.utils.filemanager": [[12, 1, 1, "", "FileManager"]], "asparagus.utils.filemanager.FileManager": [[12, 2, 1, "", "check_max_checkpoints"], [12, 2, 1, "", "create_model_directory"], [12, 2, 1, "", "load_checkpoint"], [12, 2, 1, "", "save_checkpoint"], [12, 2, 1, "", "save_config"]], "asparagus.utils.functions": [[12, 4, 1, "", "detach_tensor"], [12, 4, 1, "", "flatten_array_like"], [12, 4, 1, "", "gather_nd"], [12, 4, 1, "", "header"], [12, 4, 1, "", "printProgressBar"], [12, 4, 1, "", "segment_sum"], [12, 4, 1, "", "softplus_inverse"], [12, 4, 1, "", "unsorted_segment_sum"]], "asparagus.utils.legacy": [[12, 4, 1, "", "convert_from_tensorflow"], [12, 4, 1, "", "get_tf_config"], [12, 4, 1, "", "get_torch_config"]], "asparagus.utils.neighborlist": [[12, 1, 1, "", "ASENeighborList"], [12, 1, 1, "", "TorchNeighborList"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": [0, 17], "what": 0, "i": 0, "asparagu": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17], "why": 0, "call": 0, "can": 0, "do": 0, "next": 0, "api": [1, 17], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 17], "configur": [14, 17], "file": [14, 17, 19], "structur": 14, "gener": 14, "sampl": [8, 14], "model": [6, 14], "trainer": [11, 14], "contribut": 15, "how": 15, "question": 15, "exampl": 16, "document": 17, "instal": [17, 18], "get": 17, "start": 17, "set": [9, 18], "up": 18, "environ": 18, "depend": 18, "main": 19, "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "subpackag": 2, "submodul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "paramet": [2, 4, 6, 9, 10, 11], "data": [3, 12], "databas": 3, "database_hdf5": 3, "database_npz": 3, "database_sqlite3": 3, "datacontain": 3, "dataload": 3, "dataread": 3, "dataset": 3, "interfac": 4, "ase_model": 4, "model_as": 4, "result": 4, "model_pycharmm": 4, "orca_as": 4, "shell_as": 4, "slurm_as": 4, "layer": 5, "activ": 5, "base": 5, "cutoff": 5, "physnet_lay": 5, "radial": 5, "calcul": 6, "filemanag": [6, 12], "physnet": 6, "dispers": 7, "electrostat": 7, "graph": 7, "input": 7, "output": 7, "physnet_modul": 7, "mc": 8, "md": 8, "meta": 8, "nm": 8, "sampler": 8, "config": 9, "return": [9, 11], "default": 9, "dtype": 9, "globl": 9, "properti": 9, "tool": 10, "dmc": 10, "mdp": 10, "mep": 10, "spectroscopi": 10, "train": 11, "optim": 11, "schedul": 11, "tester": 11, "util": 12, "check_config": 12, "check_dtyp": 12, "check_unit": 12, "function": 12, "legaci": 12, "neighborlist": 12}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"About": [[0, "about"], [17, "about"]], "What is Asparagus?": [[0, "what-is-asparagus"]], "Why is it called Asparagus?": [[0, "why-is-it-called-asparagus"]], "What can Asparagus do?": [[0, "what-can-asparagus-do"]], "What is next for Asparagus?": [[0, "what-is-next-for-asparagus"]], "Configuration File Structure": [[14, "configuration-file-structure"]], "General": [[14, "general"]], "Sampling": [[14, "sampling"]], "Model": [[14, "model"]], "Trainer": [[14, "trainer"]], "Contributing": [[15, "contributing"]], "How to contribute": [[15, "how-to-contribute"]], "Questions": [[15, "questions"]], "Examples": [[16, "examples"]], "Asparagus Documentation": [[17, "asparagus-documentation"]], "Contents:": [[17, null]], "Installation": [[17, "installation"], [18, "installation"], [18, "id1"]], "Getting Started": [[17, "getting-started"]], "Configuration File": [[17, "configuration-file"]], "Api Documentation": [[17, "api-documentation"]], "Setting up the environment": [[18, "setting-up-the-environment"]], "Dependencies": [[18, "dependencies"]], "API": [[1, "api"]], "Contents": [[1, "contents"]], "asparagus package": [[2, "asparagus-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"]], "asparagus.asparagus module": [[2, "module-asparagus.asparagus"]], "Parameter": [[2, "parameter"], [4, "parameter"], [4, "id1"], [4, "id2"], [4, "id3"], [4, "id4"], [4, "id5"], [4, "id6"], [6, "parameter"], [11, "parameter"], [11, "id1"], [11, "id2"], [11, "id3"]], "Parameter:": [[2, "id1"], [2, "id2"]], "Module contents": [[2, "module-asparagus"], [3, "module-asparagus.data"], [4, "module-asparagus.interface"], [5, "module-asparagus.layer"], [6, "module-asparagus.model"], [7, "module-asparagus.module"], [8, "module-asparagus.sample"], [9, "module-asparagus.settings"], [10, "module-asparagus.tools"], [11, "module-asparagus.train"], [12, "module-asparagus.utils"]], "Asparagus": [[2, "asparagus"]], "asparagus.data package": [[3, "asparagus-data-package"]], "asparagus.data.database module": [[3, "module-asparagus.data.database"]], "asparagus.data.database_hdf5 module": [[3, "module-asparagus.data.database_hdf5"]], "asparagus.data.database_npz module": [[3, "module-asparagus.data.database_npz"]], "asparagus.data.database_sqlite3 module": [[3, "module-asparagus.data.database_sqlite3"]], "asparagus.data.datacontainer module": [[3, "module-asparagus.data.datacontainer"]], "asparagus.data.dataloader module": [[3, "module-asparagus.data.dataloader"]], "asparagus.data.datareader module": [[3, "module-asparagus.data.datareader"]], "asparagus.data.dataset module": [[3, "module-asparagus.data.dataset"]], "asparagus.interface package": [[4, "asparagus-interface-package"]], "asparagus.interface.ase_model module": [[4, "module-asparagus.interface.ase_model"]], "asparagus.interface.model_ase module": [[4, "module-asparagus.interface.model_ase"]], "Results": [[4, "results"], [4, "id9"], [4, "id12"]], "asparagus.interface.model_pycharmm module": [[4, "module-asparagus.interface.model_pycharmm"]], "asparagus.interface.orca_ase module": [[4, "module-asparagus.interface.orca_ase"]], "asparagus.interface.shell_ase module": [[4, "module-asparagus.interface.shell_ase"]], "asparagus.interface.slurm_ase module": [[4, "module-asparagus.interface.slurm_ase"]], "asparagus.layer package": [[5, "asparagus-layer-package"]], "asparagus.layer.activation module": [[5, "module-asparagus.layer.activation"]], "asparagus.layer.base module": [[5, "module-asparagus.layer.base"]], "asparagus.layer.cutoff module": [[5, "module-asparagus.layer.cutoff"]], "asparagus.layer.physnet_layers module": [[5, "module-asparagus.layer.physnet_layers"]], "asparagus.layer.radial module": [[5, "module-asparagus.layer.radial"]], "asparagus.model package": [[6, "asparagus-model-package"]], "asparagus.model.calculator module": [[6, "module-asparagus.model.calculator"]], "asparagus.model.filemanager module": [[6, "module-asparagus.model.filemanager"]], "asparagus.model.physnet module": [[6, "module-asparagus.model.physnet"]], "asparagus.module package": [[7, "asparagus-module-package"]], "asparagus.module.dispersion module": [[7, "module-asparagus.module.dispersion"]], "asparagus.module.electrostatics module": [[7, "module-asparagus.module.electrostatics"]], "asparagus.module.graph module": [[7, "module-asparagus.module.graph"]], "asparagus.module.input module": [[7, "module-asparagus.module.input"]], "asparagus.module.output module": [[7, "module-asparagus.module.output"]], "asparagus.module.physnet_modules module": [[7, "module-asparagus.module.physnet_modules"]], "asparagus.sample package": [[8, "asparagus-sample-package"]], "asparagus.sample.mc module": [[8, "module-asparagus.sample.mc"]], "asparagus.sample.md module": [[8, "module-asparagus.sample.md"]], "asparagus.sample.meta module": [[8, "module-asparagus.sample.meta"]], "asparagus.sample.nms module": [[8, "module-asparagus.sample.nms"]], "asparagus.sample.sampler module": [[8, "module-asparagus.sample.sampler"]], "asparagus.settings package": [[9, "asparagus-settings-package"]], "asparagus.settings.config module": [[9, "module-asparagus.settings.config"]], "Parameters:": [[9, "parameters"], [10, "parameters"], [10, "id1"]], "Return:": [[9, "return"]], "asparagus.settings.default module": [[9, "module-asparagus.settings.default"]], "asparagus.settings.dtypes module": [[9, "module-asparagus.settings.dtypes"]], "asparagus.settings.globl module": [[9, "module-asparagus.settings.globl"]], "asparagus.settings.properties module": [[9, "module-asparagus.settings.properties"]], "asparagus.tools package": [[10, "asparagus-tools-package"]], "asparagus.tools.DMC module": [[10, "module-asparagus.tools.DMC"]], "asparagus.tools.MDP module": [[10, "module-asparagus.tools.MDP"]], "asparagus.tools.MEP module": [[10, "module-asparagus.tools.MEP"]], "asparagus.tools.spectroscopy module": [[10, "module-asparagus.tools.spectroscopy"]], "asparagus.train package": [[11, "asparagus-train-package"]], "asparagus.train.optimizer module": [[11, "module-asparagus.train.optimizer"]], "asparagus.train.scheduler module": [[11, "module-asparagus.train.scheduler"]], "asparagus.train.tester module": [[11, "module-asparagus.train.tester"]], "asparagus.train.trainer module": [[11, "module-asparagus.train.trainer"]], "Returns:": [[11, "returns"], [11, "id4"]], "asparagus.utils package": [[12, "asparagus-utils-package"]], "asparagus.utils.check_config module": [[12, "module-asparagus.utils.check_config"]], "asparagus.utils.check_dtype module": [[12, "module-asparagus.utils.check_dtype"]], "asparagus.utils.check_units module": [[12, "module-asparagus.utils.check_units"]], "asparagus.utils.data module": [[12, "module-asparagus.utils.data"]], "asparagus.utils.filemanager module": [[12, "module-asparagus.utils.filemanager"]], "asparagus.utils.functions module": [[12, "module-asparagus.utils.functions"]], "asparagus.utils.legacy module": [[12, "module-asparagus.utils.legacy"]], "asparagus.utils.neighborlist module": [[12, "module-asparagus.utils.neighborlist"]], "asparagus": [[13, "asparagus"]], "Main file": [[19, "main-file"]]}, "indexentries": {"asparagus (class in asparagus.asparagus)": [[2, "asparagus.asparagus.Asparagus"]], "asparagus": [[2, "module-asparagus"]], "asparagus.asparagus": [[2, "module-asparagus.asparagus"]], "get() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.get"]], "get_ase_calculator() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.get_ase_calculator"]], "get_data_container() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.get_data_container"]], "get_model_calculator() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.get_model_calculator"]], "get_trainer() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.get_trainer"]], "module": [[2, "module-asparagus"], [2, "module-asparagus.asparagus"], [3, "module-asparagus.data"], [3, "module-asparagus.data.database"], [3, "module-asparagus.data.database_hdf5"], [3, "module-asparagus.data.database_npz"], [3, "module-asparagus.data.database_sqlite3"], [3, "module-asparagus.data.datacontainer"], [3, "module-asparagus.data.dataloader"], [3, "module-asparagus.data.datareader"], [3, "module-asparagus.data.dataset"], [4, "module-asparagus.interface"], [4, "module-asparagus.interface.ase_model"], [4, "module-asparagus.interface.model_ase"], [4, "module-asparagus.interface.model_pycharmm"], [4, "module-asparagus.interface.orca_ase"], [4, "module-asparagus.interface.shell_ase"], [4, "module-asparagus.interface.slurm_ase"], [5, "module-asparagus.layer"], [5, "module-asparagus.layer.activation"], [5, "module-asparagus.layer.base"], [5, "module-asparagus.layer.cutoff"], [5, "module-asparagus.layer.physnet_layers"], [5, "module-asparagus.layer.radial"], [6, "module-asparagus.model"], [6, "module-asparagus.model.calculator"], [6, "module-asparagus.model.filemanager"], [6, "module-asparagus.model.physnet"], [7, "module-asparagus.module"], [7, "module-asparagus.module.dispersion"], [7, "module-asparagus.module.electrostatics"], [7, "module-asparagus.module.graph"], [7, "module-asparagus.module.input"], [7, "module-asparagus.module.output"], [7, "module-asparagus.module.physnet_modules"], [8, "module-asparagus.sample"], [8, "module-asparagus.sample.mc"], [8, "module-asparagus.sample.md"], [8, "module-asparagus.sample.meta"], [8, "module-asparagus.sample.nms"], [8, "module-asparagus.sample.sampler"], [9, "module-asparagus.settings"], [9, "module-asparagus.settings.config"], [9, "module-asparagus.settings.default"], [9, "module-asparagus.settings.dtypes"], [9, "module-asparagus.settings.globl"], [9, "module-asparagus.settings.properties"], [10, "module-asparagus.tools"], [10, "module-asparagus.tools.DMC"], [10, "module-asparagus.tools.MDP"], [10, "module-asparagus.tools.MEP"], [10, "module-asparagus.tools.spectroscopy"], [11, "module-asparagus.train"], [11, "module-asparagus.train.optimizer"], [11, "module-asparagus.train.scheduler"], [11, "module-asparagus.train.tester"], [11, "module-asparagus.train.trainer"], [12, "module-asparagus.utils"], [12, "module-asparagus.utils.check_config"], [12, "module-asparagus.utils.check_dtype"], [12, "module-asparagus.utils.check_units"], [12, "module-asparagus.utils.data"], [12, "module-asparagus.utils.filemanager"], [12, "module-asparagus.utils.functions"], [12, "module-asparagus.utils.legacy"], [12, "module-asparagus.utils.neighborlist"]], "set_data_container() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.set_data_container"]], "set_model_calculator() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.set_model_calculator"]], "train() (asparagus.asparagus.asparagus method)": [[2, "asparagus.asparagus.Asparagus.train"]], "database (class in asparagus.data.database)": [[3, "asparagus.data.database.DataBase"]], "database_hdf5 (class in asparagus.data.database_hdf5)": [[3, "asparagus.data.database_hdf5.DataBase_hdf5"]], "database_npz (class in asparagus.data.database_npz)": [[3, "asparagus.data.database_npz.DataBase_npz"]], "datacontainer (class in asparagus.data.datacontainer)": [[3, "asparagus.data.datacontainer.DataContainer"]], "dataloader (class in asparagus.data.dataloader)": [[3, "asparagus.data.dataloader.DataLoader"]], "datareader (class in asparagus.data.datareader)": [[3, "asparagus.data.datareader.DataReader"]], "dataset (class in asparagus.data.dataset)": [[3, "asparagus.data.dataset.DataSet"]], "datasubset (class in asparagus.data.dataset)": [[3, "asparagus.data.dataset.DataSubSet"]], "add_atoms() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.add_atoms"]], "asparagus.data": [[3, "module-asparagus.data"]], "asparagus.data.database": [[3, "module-asparagus.data.database"]], "asparagus.data.database_hdf5": [[3, "module-asparagus.data.database_hdf5"]], "asparagus.data.database_npz": [[3, "module-asparagus.data.database_npz"]], "asparagus.data.database_sqlite3": [[3, "module-asparagus.data.database_sqlite3"]], "asparagus.data.datacontainer": [[3, "module-asparagus.data.datacontainer"]], "asparagus.data.dataloader": [[3, "module-asparagus.data.dataloader"]], "asparagus.data.datareader": [[3, "module-asparagus.data.datareader"]], "asparagus.data.dataset": [[3, "module-asparagus.data.dataset"]], "check_data_compatibility() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.check_data_compatibility"]], "check_data_properties() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.check_data_properties"]], "check_data_source() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.check_data_source"]], "connect() (in module asparagus.data.database)": [[3, "asparagus.data.database.connect"]], "count() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.count"]], "data_collate_fn() (asparagus.data.dataloader.dataloader method)": [[3, "asparagus.data.dataloader.DataLoader.data_collate_fn"]], "dataset_load() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.dataset_load"]], "dataset_setup() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.dataset_setup"]], "delete() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.delete"]], "delete() (asparagus.data.database_npz.database_npz method)": [[3, "asparagus.data.database_npz.DataBase_npz.delete"]], "get() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.get"]], "get() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get"]], "get() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.get"]], "get() (asparagus.data.dataset.datasubset method)": [[3, "asparagus.data.dataset.DataSubSet.get"]], "get_datalabels() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_datalabels"]], "get_dataloader() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_dataloader"]], "get_dataset() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_dataset"]], "get_from_metadata() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_from_metadata"]], "get_info() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_info"]], "get_last_id() (asparagus.data.database_hdf5.database_hdf5 method)": [[3, "asparagus.data.database_hdf5.DataBase_hdf5.get_last_id"]], "get_last_id() (asparagus.data.database_npz.database_npz method)": [[3, "asparagus.data.database_npz.DataBase_npz.get_last_id"]], "get_metadata() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.get_metadata"]], "get_metadata() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_metadata"]], "get_metadata() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.get_metadata"]], "get_metadata() (in module asparagus.data.database)": [[3, "asparagus.data.database.get_metadata"]], "get_properties() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.get_properties"]], "get_properties() (asparagus.data.dataset.datasubset method)": [[3, "asparagus.data.dataset.DataSubSet.get_properties"]], "get_property_scaling() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_property_scaling"]], "get_test() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_test"]], "get_train() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_train"]], "get_valid() (asparagus.data.datacontainer.datacontainer method)": [[3, "asparagus.data.datacontainer.DataContainer.get_valid"]], "init_neighbor_list() (asparagus.data.dataloader.dataloader method)": [[3, "asparagus.data.dataloader.DataLoader.init_neighbor_list"]], "init_systems() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.init_systems"]], "load() (asparagus.data.datareader.datareader method)": [[3, "asparagus.data.datareader.DataReader.load"]], "load_ase() (asparagus.data.datareader.datareader method)": [[3, "asparagus.data.datareader.DataReader.load_ase"]], "load_atoms() (asparagus.data.datareader.datareader method)": [[3, "asparagus.data.datareader.DataReader.load_atoms"]], "load_data() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.load_data"]], "load_db() (asparagus.data.datareader.datareader method)": [[3, "asparagus.data.datareader.DataReader.load_db"]], "load_npz() (asparagus.data.datareader.datareader method)": [[3, "asparagus.data.datareader.DataReader.load_npz"]], "load_traj() (asparagus.data.datareader.datareader method)": [[3, "asparagus.data.datareader.DataReader.load_traj"]], "metadata (asparagus.data.database.database property)": [[3, "asparagus.data.database.DataBase.metadata"]], "metadata (asparagus.data.database_hdf5.database_hdf5 property)": [[3, "asparagus.data.database_hdf5.DataBase_hdf5.metadata"]], "metadata (asparagus.data.database_npz.database_npz property)": [[3, "asparagus.data.database_npz.DataBase_npz.metadata"]], "metadata (asparagus.data.dataset.dataset property)": [[3, "asparagus.data.dataset.DataSet.metadata"]], "reserve() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.reserve"]], "reset() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.reset"]], "reset_database() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.reset_database"]], "set_metadata() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.set_metadata"]], "set_metadata() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.set_metadata"]], "set_properties() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.set_properties"]], "set_properties() (asparagus.data.dataset.datasubset method)": [[3, "asparagus.data.dataset.DataSubSet.set_properties"]], "store_neighbor_list() (asparagus.data.dataloader.dataloader method)": [[3, "asparagus.data.dataloader.DataLoader.store_neighbor_list"]], "update() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.update"]], "update() (asparagus.data.database_hdf5.database_hdf5 method)": [[3, "asparagus.data.database_hdf5.DataBase_hdf5.update"]], "update() (asparagus.data.database_npz.database_npz method)": [[3, "asparagus.data.database_npz.DataBase_npz.update"]], "update_properties() (asparagus.data.dataset.dataset method)": [[3, "asparagus.data.dataset.DataSet.update_properties"]], "update_properties() (asparagus.data.dataset.datasubset method)": [[3, "asparagus.data.dataset.DataSubSet.update_properties"]], "write() (asparagus.data.database.database method)": [[3, "asparagus.data.database.DataBase.write"]], "ase_calculator (class in asparagus.interface.model_ase)": [[4, "asparagus.interface.model_ase.ASE_Calculator"]], "orca_dipole (class in asparagus.interface.orca_ase)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole"]], "pointchargepotential (class in asparagus.interface.orca_ase)": [[4, "asparagus.interface.orca_ase.PointChargePotential"]], "pycharmm_calculator (class in asparagus.interface.model_pycharmm)": [[4, "asparagus.interface.model_pycharmm.PyCharmm_Calculator"]], "shellcalculator (class in asparagus.interface.shell_ase)": [[4, "asparagus.interface.shell_ase.ShellCalculator"]], "slurmcalculator (class in asparagus.interface.slurm_ase)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator"]], "tagreplacement (class in asparagus.interface.shell_ase)": [[4, "asparagus.interface.shell_ase.TagReplacement"]], "asparagus.interface": [[4, "module-asparagus.interface"]], "asparagus.interface.ase_model": [[4, "module-asparagus.interface.ase_model"]], "asparagus.interface.model_ase": [[4, "module-asparagus.interface.model_ase"]], "asparagus.interface.model_pycharmm": [[4, "module-asparagus.interface.model_pycharmm"]], "asparagus.interface.orca_ase": [[4, "module-asparagus.interface.orca_ase"]], "asparagus.interface.shell_ase": [[4, "module-asparagus.interface.shell_ase"]], "asparagus.interface.slurm_ase": [[4, "module-asparagus.interface.slurm_ase"]], "calculate() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.calculate"]], "calculate() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.calculate"]], "calculate() (asparagus.interface.slurm_ase.slurmcalculator method)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator.calculate"]], "calculate_charmm() (asparagus.interface.model_pycharmm.pycharmm_calculator method)": [[4, "asparagus.interface.model_pycharmm.PyCharmm_Calculator.calculate_charmm"]], "calculator_tag (asparagus.interface.orca_ase.pointchargepotential property)": [[4, "asparagus.interface.orca_ase.PointChargePotential.calculator_tag"]], "command (asparagus.interface.orca_ase.orca_dipole attribute)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.command"]], "command (asparagus.interface.slurm_ase.slurmcalculator attribute)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator.command"]], "default_parameters (asparagus.interface.model_ase.ase_calculator attribute)": [[4, "asparagus.interface.model_ase.ASE_Calculator.default_parameters"]], "default_parameters (asparagus.interface.orca_ase.orca_dipole attribute)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.default_parameters"]], "default_parameters (asparagus.interface.shell_ase.shellcalculator attribute)": [[4, "asparagus.interface.shell_ase.ShellCalculator.default_parameters"]], "default_parameters (asparagus.interface.slurm_ase.slurmcalculator attribute)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator.default_parameters"]], "discard_results_on_any_change (asparagus.interface.shell_ase.shellcalculator attribute)": [[4, "asparagus.interface.shell_ase.ShellCalculator.discard_results_on_any_change"]], "discard_results_on_any_change (asparagus.interface.slurm_ase.slurmcalculator attribute)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator.discard_results_on_any_change"]], "embed() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.embed"]], "get_ase_calculator() (in module asparagus.interface.ase_model)": [[4, "asparagus.interface.ase_model.get_ase_calculator"]], "get_ase_properties() (in module asparagus.interface.ase_model)": [[4, "asparagus.interface.ase_model.get_ase_properties"]], "get_charge() (asparagus.interface.shell_ase.tagreplacement method)": [[4, "asparagus.interface.shell_ase.TagReplacement.get_charge"]], "get_directory() (asparagus.interface.shell_ase.tagreplacement method)": [[4, "asparagus.interface.shell_ase.TagReplacement.get_directory"]], "get_forces() (asparagus.interface.orca_ase.pointchargepotential method)": [[4, "asparagus.interface.orca_ase.PointChargePotential.get_forces"]], "get_multiplicity() (asparagus.interface.shell_ase.tagreplacement method)": [[4, "asparagus.interface.shell_ase.TagReplacement.get_multiplicity"]], "get_spin_times_2() (asparagus.interface.shell_ase.tagreplacement method)": [[4, "asparagus.interface.shell_ase.TagReplacement.get_spin_times_2"]], "get_xyz() (asparagus.interface.shell_ase.tagreplacement method)": [[4, "asparagus.interface.shell_ase.TagReplacement.get_xyz"]], "implemented_properties (asparagus.interface.orca_ase.orca_dipole attribute)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.implemented_properties"]], "initialize_model_input() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.initialize_model_input"]], "initialize_model_input_list() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.initialize_model_input_list"]], "load_results_json() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.load_results_json"]], "load_results_json() (asparagus.interface.slurm_ase.slurmcalculator method)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator.load_results_json"]], "load_results_npz() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.load_results_npz"]], "load_results_npz() (asparagus.interface.slurm_ase.slurmcalculator method)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator.load_results_npz"]], "read() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.read"]], "read_dipole() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.read_dipole"]], "read_energy() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.read_energy"]], "read_forces() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.read_forces"]], "read_results() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.read_results"]], "read_results() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.read_results"]], "read_results() (asparagus.interface.slurm_ase.slurmcalculator method)": [[4, "asparagus.interface.slurm_ase.SlurmCalculator.read_results"]], "resolve_atoms() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.resolve_atoms"]], "set() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.set"]], "set_atoms() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.set_atoms"]], "set_atoms_charge() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.set_atoms_charge"]], "set_charges() (asparagus.interface.orca_ase.pointchargepotential method)": [[4, "asparagus.interface.orca_ase.PointChargePotential.set_charges"]], "set_input_files() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.set_input_files"]], "set_positions() (asparagus.interface.orca_ase.pointchargepotential method)": [[4, "asparagus.interface.orca_ase.PointChargePotential.set_positions"]], "set_result_files() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.set_result_files"]], "set_shell() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.set_shell"]], "set_system_properties() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.set_system_properties"]], "update_model_input() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.update_model_input"]], "update_model_input_list() (asparagus.interface.model_ase.ase_calculator method)": [[4, "asparagus.interface.model_ase.ASE_Calculator.update_model_input_list"]], "write_input() (asparagus.interface.orca_ase.orca_dipole method)": [[4, "asparagus.interface.orca_ase.ORCA_Dipole.write_input"]], "write_input() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.write_input"]], "write_mmcharges() (asparagus.interface.orca_ase.pointchargepotential method)": [[4, "asparagus.interface.orca_ase.PointChargePotential.write_mmcharges"]], "write_shell_input() (asparagus.interface.shell_ase.shellcalculator method)": [[4, "asparagus.interface.shell_ase.ShellCalculator.write_shell_input"]], "cosinecutoff (class in asparagus.layer.cutoff)": [[5, "asparagus.layer.cutoff.CosineCutoff"]], "cosinecutoff_width (class in asparagus.layer.cutoff)": [[5, "asparagus.layer.cutoff.CosineCutoff_Width"]], "denselayer (class in asparagus.layer.base)": [[5, "asparagus.layer.base.DenseLayer"]], "gaussianrbf (class in asparagus.layer.radial)": [[5, "asparagus.layer.radial.GaussianRBF"]], "gaussianrbf_physnet (class in asparagus.layer.radial)": [[5, "asparagus.layer.radial.GaussianRBF_PhysNet"]], "interactionblock (class in asparagus.layer.physnet_layers)": [[5, "asparagus.layer.physnet_layers.InteractionBlock"]], "interactionlayer (class in asparagus.layer.physnet_layers)": [[5, "asparagus.layer.physnet_layers.InteractionLayer"]], "outputblock (class in asparagus.layer.physnet_layers)": [[5, "asparagus.layer.physnet_layers.OutputBlock"]], "poly6cutoff (class in asparagus.layer.cutoff)": [[5, "asparagus.layer.cutoff.Poly6Cutoff"]], "poly6cutoff_width (class in asparagus.layer.cutoff)": [[5, "asparagus.layer.cutoff.Poly6Cutoff_Width"]], "residuallayer (class in asparagus.layer.base)": [[5, "asparagus.layer.base.ResidualLayer"]], "asparagus.layer": [[5, "module-asparagus.layer"]], "asparagus.layer.activation": [[5, "module-asparagus.layer.activation"]], "asparagus.layer.base": [[5, "module-asparagus.layer.base"]], "asparagus.layer.cutoff": [[5, "module-asparagus.layer.cutoff"]], "asparagus.layer.physnet_layers": [[5, "module-asparagus.layer.physnet_layers"]], "asparagus.layer.radial": [[5, "module-asparagus.layer.radial"]], "forward() (asparagus.layer.base.denselayer method)": [[5, "asparagus.layer.base.DenseLayer.forward"]], "forward() (asparagus.layer.base.residuallayer method)": [[5, "asparagus.layer.base.ResidualLayer.forward"]], "forward() (asparagus.layer.cutoff.cosinecutoff method)": [[5, "asparagus.layer.cutoff.CosineCutoff.forward"]], "forward() (asparagus.layer.cutoff.cosinecutoff_width method)": [[5, "asparagus.layer.cutoff.CosineCutoff_Width.forward"]], "forward() (asparagus.layer.cutoff.poly6cutoff method)": [[5, "asparagus.layer.cutoff.Poly6Cutoff.forward"]], "forward() (asparagus.layer.cutoff.poly6cutoff_width method)": [[5, "asparagus.layer.cutoff.Poly6Cutoff_Width.forward"]], "forward() (asparagus.layer.physnet_layers.interactionblock method)": [[5, "asparagus.layer.physnet_layers.InteractionBlock.forward"]], "forward() (asparagus.layer.physnet_layers.interactionlayer method)": [[5, "asparagus.layer.physnet_layers.InteractionLayer.forward"]], "forward() (asparagus.layer.physnet_layers.outputblock method)": [[5, "asparagus.layer.physnet_layers.OutputBlock.forward"]], "forward() (asparagus.layer.radial.gaussianrbf method)": [[5, "asparagus.layer.radial.GaussianRBF.forward"]], "forward() (asparagus.layer.radial.gaussianrbf_physnet method)": [[5, "asparagus.layer.radial.GaussianRBF_PhysNet.forward"]], "get_activation_fn() (in module asparagus.layer.activation)": [[5, "asparagus.layer.activation.get_activation_fn"]], "get_cutoff_fn() (in module asparagus.layer.cutoff)": [[5, "asparagus.layer.cutoff.get_cutoff_fn"]], "get_radial_fn() (in module asparagus.layer.radial)": [[5, "asparagus.layer.radial.get_radial_fn"]], "in_features (asparagus.layer.base.denselayer attribute)": [[5, "asparagus.layer.base.DenseLayer.in_features"]], "out_features (asparagus.layer.base.denselayer attribute)": [[5, "asparagus.layer.base.DenseLayer.out_features"]], "reset_parameters() (asparagus.layer.base.denselayer method)": [[5, "asparagus.layer.base.DenseLayer.reset_parameters"]], "softplus_inverse() (asparagus.layer.radial.gaussianrbf_physnet static method)": [[5, "asparagus.layer.radial.GaussianRBF_PhysNet.softplus_inverse"]], "training (asparagus.layer.base.residuallayer attribute)": [[5, "asparagus.layer.base.ResidualLayer.training"]], "training (asparagus.layer.cutoff.cosinecutoff attribute)": [[5, "asparagus.layer.cutoff.CosineCutoff.training"]], "training (asparagus.layer.cutoff.cosinecutoff_width attribute)": [[5, "asparagus.layer.cutoff.CosineCutoff_Width.training"]], "training (asparagus.layer.cutoff.poly6cutoff attribute)": [[5, "asparagus.layer.cutoff.Poly6Cutoff.training"]], "training (asparagus.layer.cutoff.poly6cutoff_width attribute)": [[5, "asparagus.layer.cutoff.Poly6Cutoff_Width.training"]], "training (asparagus.layer.physnet_layers.interactionblock attribute)": [[5, "asparagus.layer.physnet_layers.InteractionBlock.training"]], "training (asparagus.layer.physnet_layers.interactionlayer attribute)": [[5, "asparagus.layer.physnet_layers.InteractionLayer.training"]], "training (asparagus.layer.physnet_layers.outputblock attribute)": [[5, "asparagus.layer.physnet_layers.OutputBlock.training"]], "training (asparagus.layer.radial.gaussianrbf attribute)": [[5, "asparagus.layer.radial.GaussianRBF.training"]], "training (asparagus.layer.radial.gaussianrbf_physnet attribute)": [[5, "asparagus.layer.radial.GaussianRBF_PhysNet.training"]], "weight (asparagus.layer.base.denselayer attribute)": [[5, "asparagus.layer.base.DenseLayer.weight"]], "filemanager (class in asparagus.model.filemanager)": [[6, "asparagus.model.filemanager.FileManager"]], "model_physnet (class in asparagus.model.physnet)": [[6, "asparagus.model.physnet.Model_PhysNet"]], "asparagus.model": [[6, "module-asparagus.model"]], "asparagus.model.calculator": [[6, "module-asparagus.model.calculator"]], "asparagus.model.filemanager": [[6, "module-asparagus.model.filemanager"]], "asparagus.model.physnet": [[6, "module-asparagus.model.physnet"]], "check_max_checkpoints() (asparagus.model.filemanager.filemanager method)": [[6, "asparagus.model.filemanager.FileManager.check_max_checkpoints"]], "create_model_directory() (asparagus.model.filemanager.filemanager method)": [[6, "asparagus.model.filemanager.FileManager.create_model_directory"]], "forward() (asparagus.model.physnet.model_physnet method)": [[6, "asparagus.model.physnet.Model_PhysNet.forward"]], "get_info() (asparagus.model.physnet.model_physnet method)": [[6, "asparagus.model.physnet.Model_PhysNet.get_info"]], "get_model_calculator() (in module asparagus.model.calculator)": [[6, "asparagus.model.calculator.get_model_calculator"]], "get_trainable_parameters() (asparagus.model.physnet.model_physnet method)": [[6, "asparagus.model.physnet.Model_PhysNet.get_trainable_parameters"]], "load_checkpoint() (asparagus.model.filemanager.filemanager method)": [[6, "asparagus.model.filemanager.FileManager.load_checkpoint"]], "save_checkpoint() (asparagus.model.filemanager.filemanager method)": [[6, "asparagus.model.filemanager.FileManager.save_checkpoint"]], "save_config() (asparagus.model.filemanager.filemanager method)": [[6, "asparagus.model.filemanager.FileManager.save_config"]], "set_property_scaling() (asparagus.model.physnet.model_physnet method)": [[6, "asparagus.model.physnet.Model_PhysNet.set_property_scaling"]], "set_unit_properties() (asparagus.model.physnet.model_physnet method)": [[6, "asparagus.model.physnet.Model_PhysNet.set_unit_properties"]], "training (asparagus.model.physnet.model_physnet attribute)": [[6, "asparagus.model.physnet.Model_PhysNet.training"]], "d3_dispersion (class in asparagus.module.dispersion)": [[7, "asparagus.module.dispersion.D3_dispersion"]], "graph_physnet (class in asparagus.module.physnet_modules)": [[7, "asparagus.module.physnet_modules.Graph_PhysNet"]], "input_physnet (class in asparagus.module.physnet_modules)": [[7, "asparagus.module.physnet_modules.Input_PhysNet"]], "output_physnet (class in asparagus.module.physnet_modules)": [[7, "asparagus.module.physnet_modules.Output_PhysNet"]], "pc_shielded_electrostatics (class in asparagus.module.electrostatics)": [[7, "asparagus.module.electrostatics.PC_shielded_electrostatics"]], "asparagus.module": [[7, "module-asparagus.module"]], "asparagus.module.dispersion": [[7, "module-asparagus.module.dispersion"]], "asparagus.module.electrostatics": [[7, "module-asparagus.module.electrostatics"]], "asparagus.module.graph": [[7, "module-asparagus.module.graph"]], "asparagus.module.input": [[7, "module-asparagus.module.input"]], "asparagus.module.output": [[7, "module-asparagus.module.output"]], "asparagus.module.physnet_modules": [[7, "module-asparagus.module.physnet_modules"]], "forward() (asparagus.module.dispersion.d3_dispersion method)": [[7, "asparagus.module.dispersion.D3_dispersion.forward"]], "forward() (asparagus.module.electrostatics.pc_shielded_electrostatics method)": [[7, "asparagus.module.electrostatics.PC_shielded_electrostatics.forward"]], "forward() (asparagus.module.physnet_modules.graph_physnet method)": [[7, "asparagus.module.physnet_modules.Graph_PhysNet.forward"]], "forward() (asparagus.module.physnet_modules.input_physnet method)": [[7, "asparagus.module.physnet_modules.Input_PhysNet.forward"]], "forward() (asparagus.module.physnet_modules.output_physnet method)": [[7, "asparagus.module.physnet_modules.Output_PhysNet.forward"]], "get_graph_painn() (in module asparagus.module.graph)": [[7, "asparagus.module.graph.get_Graph_PaiNN"]], "get_graph_physnet() (in module asparagus.module.graph)": [[7, "asparagus.module.graph.get_Graph_PhysNet"]], "get_input_painn() (in module asparagus.module.input)": [[7, "asparagus.module.input.get_Input_PaiNN"]], "get_input_physnet() (in module asparagus.module.input)": [[7, "asparagus.module.input.get_Input_PhysNet"]], "get_input_physnet_original() (in module asparagus.module.input)": [[7, "asparagus.module.input.get_Input_PhysNet_original"]], "get_output_painn() (in module asparagus.module.output)": [[7, "asparagus.module.output.get_Output_PaiNN"]], "get_output_physnet() (in module asparagus.module.output)": [[7, "asparagus.module.output.get_Output_PhysNet"]], "get_graph_module() (in module asparagus.module.graph)": [[7, "asparagus.module.graph.get_graph_module"]], "get_info() (asparagus.module.dispersion.d3_dispersion method)": [[7, "asparagus.module.dispersion.D3_dispersion.get_info"]], "get_info() (asparagus.module.electrostatics.pc_shielded_electrostatics method)": [[7, "asparagus.module.electrostatics.PC_shielded_electrostatics.get_info"]], "get_info() (asparagus.module.physnet_modules.graph_physnet method)": [[7, "asparagus.module.physnet_modules.Graph_PhysNet.get_info"]], "get_info() (asparagus.module.physnet_modules.input_physnet method)": [[7, "asparagus.module.physnet_modules.Input_PhysNet.get_info"]], "get_info() (asparagus.module.physnet_modules.output_physnet method)": [[7, "asparagus.module.physnet_modules.Output_PhysNet.get_info"]], "get_input_module() (in module asparagus.module.input)": [[7, "asparagus.module.input.get_input_module"]], "get_output_module() (in module asparagus.module.output)": [[7, "asparagus.module.output.get_output_module"]], "set_atomic_energies_shift() (asparagus.module.physnet_modules.output_physnet method)": [[7, "asparagus.module.physnet_modules.Output_PhysNet.set_atomic_energies_shift"]], "set_property_scaling() (asparagus.module.physnet_modules.output_physnet method)": [[7, "asparagus.module.physnet_modules.Output_PhysNet.set_property_scaling"]], "set_unit_properties() (asparagus.module.dispersion.d3_dispersion method)": [[7, "asparagus.module.dispersion.D3_dispersion.set_unit_properties"]], "set_unit_properties() (asparagus.module.electrostatics.pc_shielded_electrostatics method)": [[7, "asparagus.module.electrostatics.PC_shielded_electrostatics.set_unit_properties"]], "training (asparagus.module.dispersion.d3_dispersion attribute)": [[7, "asparagus.module.dispersion.D3_dispersion.training"]], "training (asparagus.module.electrostatics.pc_shielded_electrostatics attribute)": [[7, "asparagus.module.electrostatics.PC_shielded_electrostatics.training"]], "training (asparagus.module.physnet_modules.graph_physnet attribute)": [[7, "asparagus.module.physnet_modules.Graph_PhysNet.training"]], "training (asparagus.module.physnet_modules.input_physnet attribute)": [[7, "asparagus.module.physnet_modules.Input_PhysNet.training"]], "training (asparagus.module.physnet_modules.output_physnet attribute)": [[7, "asparagus.module.physnet_modules.Output_PhysNet.training"]], "mcsampler (class in asparagus.sample.mc)": [[8, "asparagus.sample.mc.MCSampler"]], "mdsampler (class in asparagus.sample.md)": [[8, "asparagus.sample.md.MDSampler"]], "metasampler (class in asparagus.sample.meta)": [[8, "asparagus.sample.meta.MetaSampler"]], "normalmodesampler (class in asparagus.sample.nms)": [[8, "asparagus.sample.nms.NormalModeSampler"]], "normalmodescanner (class in asparagus.sample.nms)": [[8, "asparagus.sample.nms.NormalModeScanner"]], "r() (asparagus.sample.nms.normalmodesampler method)": [[8, "asparagus.sample.nms.NormalModeSampler.R"]], "sampler (class in asparagus.sample.sampler)": [[8, "asparagus.sample.sampler.Sampler"]], "asparagus.sample": [[8, "module-asparagus.sample"]], "asparagus.sample.mc": [[8, "module-asparagus.sample.mc"]], "asparagus.sample.md": [[8, "module-asparagus.sample.md"]], "asparagus.sample.meta": [[8, "module-asparagus.sample.meta"]], "asparagus.sample.nms": [[8, "module-asparagus.sample.nms"]], "asparagus.sample.sampler": [[8, "module-asparagus.sample.sampler"]], "assign_calculator() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.assign_calculator"]], "check_properties() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.check_properties"]], "get_info() (asparagus.sample.mc.mcsampler method)": [[8, "asparagus.sample.mc.MCSampler.get_info"]], "get_info() (asparagus.sample.md.mdsampler method)": [[8, "asparagus.sample.md.MDSampler.get_info"]], "get_info() (asparagus.sample.meta.metasampler method)": [[8, "asparagus.sample.meta.MetaSampler.get_info"]], "get_info() (asparagus.sample.nms.normalmodesampler method)": [[8, "asparagus.sample.nms.NormalModeSampler.get_info"]], "get_info() (asparagus.sample.nms.normalmodescanner method)": [[8, "asparagus.sample.nms.NormalModeScanner.get_info"]], "get_info() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.get_info"]], "get_properties() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.get_properties"]], "get_sample_positions() (asparagus.sample.nms.normalmodesampler method)": [[8, "asparagus.sample.nms.NormalModeSampler.get_sample_positions"]], "keep_going() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.keep_going"]], "monte_carlo_steps() (asparagus.sample.mc.mcsampler method)": [[8, "asparagus.sample.mc.MCSampler.monte_carlo_steps"]], "read_systems() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.read_systems"]], "run() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.run"]], "run_langevin_md() (asparagus.sample.md.mdsampler method)": [[8, "asparagus.sample.md.MDSampler.run_langevin_md"]], "run_meta() (asparagus.sample.meta.metasampler method)": [[8, "asparagus.sample.meta.MetaSampler.run_meta"]], "run_optimization() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.run_optimization"]], "run_sampling() (asparagus.sample.nms.normalmodesampler method)": [[8, "asparagus.sample.nms.NormalModeSampler.run_sampling"]], "run_scan() (asparagus.sample.nms.normalmodescanner method)": [[8, "asparagus.sample.nms.NormalModeScanner.run_scan"]], "run_system() (asparagus.sample.mc.mcsampler method)": [[8, "asparagus.sample.mc.MCSampler.run_system"]], "run_system() (asparagus.sample.md.mdsampler method)": [[8, "asparagus.sample.md.MDSampler.run_system"]], "run_system() (asparagus.sample.meta.metasampler method)": [[8, "asparagus.sample.meta.MetaSampler.run_system"]], "run_system() (asparagus.sample.nms.normalmodesampler method)": [[8, "asparagus.sample.nms.NormalModeSampler.run_system"]], "run_system() (asparagus.sample.nms.normalmodescanner method)": [[8, "asparagus.sample.nms.NormalModeScanner.run_system"]], "run_system() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.run_system"]], "run_systems() (asparagus.sample.mc.mcsampler method)": [[8, "asparagus.sample.mc.MCSampler.run_systems"]], "run_systems() (asparagus.sample.md.mdsampler method)": [[8, "asparagus.sample.md.MDSampler.run_systems"]], "run_systems() (asparagus.sample.meta.metasampler method)": [[8, "asparagus.sample.meta.MetaSampler.run_systems"]], "run_systems() (asparagus.sample.nms.normalmodesampler method)": [[8, "asparagus.sample.nms.NormalModeSampler.run_systems"]], "run_systems() (asparagus.sample.nms.normalmodescanner method)": [[8, "asparagus.sample.nms.NormalModeScanner.run_systems"]], "run_systems() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.run_systems"]], "save_properties() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.save_properties"]], "write_trajectory() (asparagus.sample.sampler.sampler method)": [[8, "asparagus.sample.sampler.Sampler.write_trajectory"]], "configuration (class in asparagus.settings.config)": [[9, "asparagus.settings.config.Configuration"]], "asparagus.settings": [[9, "module-asparagus.settings"]], "asparagus.settings.config": [[9, "module-asparagus.settings.config"]], "asparagus.settings.default": [[9, "module-asparagus.settings.default"]], "asparagus.settings.dtypes": [[9, "module-asparagus.settings.dtypes"]], "asparagus.settings.globl": [[9, "module-asparagus.settings.globl"]], "asparagus.settings.properties": [[9, "module-asparagus.settings.properties"]], "check() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.check"]], "conversion_dict() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.conversion_dict"]], "convert() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.convert"]], "convert_dtype() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.convert_dtype"]], "dump() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.dump"]], "get() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.get"]], "get_config() (in module asparagus.settings.config)": [[9, "asparagus.settings.config.get_config"]], "get_dictionary() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.get_dictionary"]], "get_file_path() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.get_file_path"]], "is_convertible() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.is_convertible"]], "items() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.items"]], "keys() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.keys"]], "read() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.read"]], "set() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.set"]], "set_global_config_file() (in module asparagus.settings.globl)": [[9, "asparagus.settings.globl.set_global_config_file"]], "set_global_device() (in module asparagus.settings.globl)": [[9, "asparagus.settings.globl.set_global_device"]], "set_global_directory() (in module asparagus.settings.globl)": [[9, "asparagus.settings.globl.set_global_directory"]], "set_global_dtype() (in module asparagus.settings.globl)": [[9, "asparagus.settings.globl.set_global_dtype"]], "set_global_mode() (in module asparagus.settings.globl)": [[9, "asparagus.settings.globl.set_global_mode"]], "set_global_rate() (in module asparagus.settings.globl)": [[9, "asparagus.settings.globl.set_global_rate"]], "update() (asparagus.settings.config.configuration method)": [[9, "asparagus.settings.config.Configuration.update"]], "dmc (class in asparagus.tools.dmc)": [[10, "asparagus.tools.DMC.DMC"]], "logger_dmc (class in asparagus.tools.dmc)": [[10, "asparagus.tools.DMC.Logger_DMC"]], "mdp (class in asparagus.tools.mdp)": [[10, "asparagus.tools.MDP.MDP"]], "mep (class in asparagus.tools.mep)": [[10, "asparagus.tools.MEP.MEP"]], "asparagus.tools": [[10, "module-asparagus.tools"]], "asparagus.tools.dmc": [[10, "module-asparagus.tools.DMC"]], "asparagus.tools.mdp": [[10, "module-asparagus.tools.MDP"]], "asparagus.tools.mep": [[10, "module-asparagus.tools.MEP"]], "asparagus.tools.spectroscopy": [[10, "module-asparagus.tools.spectroscopy"]], "branch() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.branch"]], "close_files() (asparagus.tools.dmc.logger_dmc method)": [[10, "asparagus.tools.DMC.Logger_DMC.close_files"]], "create_batch() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.create_batch"]], "gbranch() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.gbranch"]], "get_mep() (asparagus.tools.mep.mep method)": [[10, "asparagus.tools.MEP.MEP.get_MEP"]], "get_batch_energy() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.get_batch_energy"]], "get_harmonic_freqs() (in module asparagus.tools.spectroscopy)": [[10, "asparagus.tools.spectroscopy.get_harmonic_freqs"]], "init_dmc() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.init_dmc"]], "log_begin() (asparagus.tools.dmc.logger_dmc method)": [[10, "asparagus.tools.DMC.Logger_DMC.log_begin"]], "log_end() (asparagus.tools.dmc.logger_dmc method)": [[10, "asparagus.tools.DMC.Logger_DMC.log_end"]], "look_up_table() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.look_up_table"]], "run() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.run"]], "run_mdp() (asparagus.tools.mdp.mdp method)": [[10, "asparagus.tools.MDP.MDP.run_mdp"]], "walk() (asparagus.tools.dmc.dmc method)": [[10, "asparagus.tools.DMC.DMC.walk"]], "write_error() (asparagus.tools.dmc.logger_dmc method)": [[10, "asparagus.tools.DMC.Logger_DMC.write_error"]], "write_last() (asparagus.tools.dmc.logger_dmc method)": [[10, "asparagus.tools.DMC.Logger_DMC.write_last"]], "write_log() (asparagus.tools.dmc.logger_dmc method)": [[10, "asparagus.tools.DMC.Logger_DMC.write_log"]], "write_pot() (asparagus.tools.dmc.logger_dmc method)": [[10, "asparagus.tools.DMC.Logger_DMC.write_pot"]], "write_trajectory() (asparagus.tools.mdp.mdp method)": [[10, "asparagus.tools.MDP.MDP.write_trajectory"]], "write_trajectory() (asparagus.tools.mep.mep method)": [[10, "asparagus.tools.MEP.MEP.write_trajectory"]], "tester (class in asparagus.train.tester)": [[11, "asparagus.train.tester.Tester"]], "trainer (class in asparagus.train.trainer)": [[11, "asparagus.train.trainer.Trainer"]], "asparagus.train": [[11, "module-asparagus.train"]], "asparagus.train.optimizer": [[11, "module-asparagus.train.optimizer"]], "asparagus.train.scheduler": [[11, "module-asparagus.train.scheduler"]], "asparagus.train.tester": [[11, "module-asparagus.train.tester"]], "asparagus.train.trainer": [[11, "module-asparagus.train.trainer"]], "check_model_units() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.check_model_units"]], "check_properties() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.check_properties"]], "check_properties_metrics_weights() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.check_properties_metrics_weights"]], "check_test_properties() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.check_test_properties"]], "compute_metrics() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.compute_metrics"]], "compute_metrics() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.compute_metrics"]], "get_optimizer() (in module asparagus.train.optimizer)": [[11, "asparagus.train.optimizer.get_optimizer"]], "get_scheduler() (in module asparagus.train.scheduler)": [[11, "asparagus.train.scheduler.get_scheduler"]], "is_imported() (asparagus.train.tester.tester static method)": [[11, "asparagus.train.tester.Tester.is_imported"]], "plain_data() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.plain_data"]], "plot_correlation() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.plot_correlation"]], "plot_histogram() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.plot_histogram"]], "plot_residual() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.plot_residual"]], "predict_batch() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.predict_batch"]], "print_metric() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.print_metric"]], "reset_metrics() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.reset_metrics"]], "reset_metrics() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.reset_metrics"]], "run() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.run"]], "save_csv() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.save_csv"]], "save_npz() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.save_npz"]], "test() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.test"]], "update_metrics() (asparagus.train.tester.tester method)": [[11, "asparagus.train.tester.Tester.update_metrics"]], "update_metrics() (asparagus.train.trainer.trainer method)": [[11, "asparagus.train.trainer.Trainer.update_metrics"]], "aseneighborlist (class in asparagus.utils.neighborlist)": [[12, "asparagus.utils.neighborlist.ASENeighborList"]], "filemanager (class in asparagus.utils.filemanager)": [[12, "asparagus.utils.filemanager.FileManager"]], "torchneighborlist (class in asparagus.utils.neighborlist)": [[12, "asparagus.utils.neighborlist.TorchNeighborList"]], "asparagus.utils": [[12, "module-asparagus.utils"]], "asparagus.utils.check_config": [[12, "module-asparagus.utils.check_config"]], "asparagus.utils.check_dtype": [[12, "module-asparagus.utils.check_dtype"]], "asparagus.utils.check_units": [[12, "module-asparagus.utils.check_units"]], "asparagus.utils.data": [[12, "module-asparagus.utils.data"]], "asparagus.utils.filemanager": [[12, "module-asparagus.utils.filemanager"]], "asparagus.utils.functions": [[12, "module-asparagus.utils.functions"]], "asparagus.utils.legacy": [[12, "module-asparagus.utils.legacy"]], "asparagus.utils.neighborlist": [[12, "module-asparagus.utils.neighborlist"]], "check_input_dtype() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.check_input_dtype"]], "check_max_checkpoints() (asparagus.utils.filemanager.filemanager method)": [[12, "asparagus.utils.filemanager.FileManager.check_max_checkpoints"]], "check_property_label() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.check_property_label"]], "check_units() (in module asparagus.utils.check_units)": [[12, "asparagus.utils.check_units.check_units"]], "convert_from_tensorflow() (in module asparagus.utils.legacy)": [[12, "asparagus.utils.legacy.convert_from_tensorflow"]], "convert_unit_ase() (in module asparagus.utils.check_units)": [[12, "asparagus.utils.check_units.convert_unit_ase"]], "create_model_directory() (asparagus.utils.filemanager.filemanager method)": [[12, "asparagus.utils.filemanager.FileManager.create_model_directory"]], "detach_tensor() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.detach_tensor"]], "flatten_array_like() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.flatten_array_like"]], "gather_nd() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.gather_nd"]], "get_default_args() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.get_default_args"]], "get_dtype_args() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.get_dtype_args"]], "get_function_location() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.get_function_location"]], "get_input_args() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.get_input_args"]], "get_tf_config() (in module asparagus.utils.legacy)": [[12, "asparagus.utils.legacy.get_tf_config"]], "get_torch_config() (in module asparagus.utils.legacy)": [[12, "asparagus.utils.legacy.get_torch_config"]], "header() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.header"]], "in_cuda() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.in_cuda"]], "is_none() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_None"]], "is_none_array() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_None_array"]], "is_array_like() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_array_like"]], "is_ase_atoms() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_ase_atoms"]], "is_ase_atoms_array() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_ase_atoms_array"]], "is_attached() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_attached"]], "is_bool() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_bool"]], "is_bool_array() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_bool_array"]], "is_boolean_array() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_boolean_array"]], "is_callable() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_callable"]], "is_dictionary() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_dictionary"]], "is_grad_enabled() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_grad_enabled"]], "is_integer() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_integer"]], "is_integer_array() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_integer_array"]], "is_numeric() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_numeric"]], "is_numeric_array() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_numeric_array"]], "is_object() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_object"]], "is_string() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_string"]], "is_string_array() (in module asparagus.utils.check_dtype)": [[12, "asparagus.utils.check_dtype.is_string_array"]], "load_checkpoint() (asparagus.utils.filemanager.filemanager method)": [[12, "asparagus.utils.filemanager.FileManager.load_checkpoint"]], "merge_dictionaries() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.merge_dictionaries"]], "merge_dictionary_lists() (in module asparagus.utils.check_config)": [[12, "asparagus.utils.check_config.merge_dictionary_lists"]], "printprogressbar() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.printProgressBar"]], "save_checkpoint() (asparagus.utils.filemanager.filemanager method)": [[12, "asparagus.utils.filemanager.FileManager.save_checkpoint"]], "save_config() (asparagus.utils.filemanager.filemanager method)": [[12, "asparagus.utils.filemanager.FileManager.save_config"]], "segment_sum() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.segment_sum"]], "softplus_inverse() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.softplus_inverse"]], "unsorted_segment_sum() (in module asparagus.utils.functions)": [[12, "asparagus.utils.functions.unsorted_segment_sum"]]}})